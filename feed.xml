<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lackadaisical Cherimoya</title>
    <description>It is still a beautiful world. Be cheerful. Strive to be happy.</description>
    <link>https://mythicalprogrammer.github.io/</link>
    <atom:link href="https://mythicalprogrammer.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 16 Sep 2019 14:21:03 -0700</pubDate>
    <lastBuildDate>Mon, 16 Sep 2019 14:21:03 -0700</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>Elixir Phoenix 1.4 Deployments with Distillery and Edeliver on Ubuntu</title>
        <description>&lt;p&gt;Base on:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://devato.com/automate-elixir-phoenix-1-4-deployment-with-distillery-and-edeliver-on-ubuntu/#step-6-target-server-install-nodejs&quot;&gt;https://devato.com/automate-elixir-phoenix-1-4-deployment-with-distillery-and-edeliver-on-ubuntu/#step-6-target-server-install-nodejs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@zek/deploy-early-and-often-deploying-phoenix-with-edeliver-and-distillery-part-one-5e91cac8d4bd&quot;&gt;https://medium.com/@zek/deploy-early-and-often-deploying-phoenix-with-edeliver-and-distillery-part-one-5e91cac8d4bd&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@zek/deploy-early-and-often-deploying-phoenix-with-edeliver-and-distillery-part-two-f361ef36aa10&quot;&gt;https://medium.com/@zek/deploy-early-and-often-deploying-phoenix-with-edeliver-and-distillery-part-two-f361ef36aa10&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.progressplum.app/ssl-migration-from-nginx-to-cowboy-2-in-phoenix-1-4/&quot;&gt;https://blog.progressplum.app/ssl-migration-from-nginx-to-cowboy-2-in-phoenix-1-4/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://elixirforum.com/t/elixir-1-9-releases-with-edeliver/23728/3?u=mythicalprogrammer&quot;&gt;https://elixirforum.com/t/elixir-1-9-releases-with-edeliver/23728/3?u=mythicalprogrammer&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;step-1-create-your-digital-ocean-droplet&quot;&gt;Step 1: Create your Digital Ocean droplet&lt;/h2&gt;

&lt;p&gt;Make sure you add your SSH when creating digital ocean and do not add a paraphrase to your SSH. It doesn’t work with paraphrase.&lt;/p&gt;

&lt;h2 id=&quot;step-2-setting-up-your-server-do-droplet&quot;&gt;Step 2: Setting up your server (DO droplet)&lt;/h2&gt;

&lt;h3 id=&quot;log-into-your-server&quot;&gt;Log into your server.&lt;/h3&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh root@134.209.8.141
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;setup-vim-as-default-editor-on-your-server&quot;&gt;Setup VIM as default editor on your server.&lt;/h3&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo update-alternatives --config editor
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Make sure you select the &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/bin/vim.basic&lt;/code&gt; option which is number 3.&lt;/p&gt;

&lt;h3 id=&quot;update-your-locale&quot;&gt;Update your locale.&lt;/h3&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo update-locale &lt;span class=&quot;nv&quot;&gt;LC_ALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;en_US.UTF-8
sudo update-locale &lt;span class=&quot;nv&quot;&gt;LANGUAGE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;en_US.UTF-8
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;create-new-deploy-user&quot;&gt;Create new &lt;code class=&quot;highlighter-rouge&quot;&gt;deploy&lt;/code&gt; user&lt;/h3&gt;

&lt;p&gt;The next step is to create a non-root user on the server which will own our application and handle deployments. We’ll configure the .ssh directory for the user, configure the user to have passwordless sudo access, and disabled password login to harden the server a bit.&lt;/p&gt;

&lt;p&gt;Let’s create the user &lt;code class=&quot;highlighter-rouge&quot;&gt;deploy&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;As &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt; on the target server:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;adduser deploy
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Fill out the data as required. Like password.&lt;/p&gt;

&lt;p&gt;Next, run this series of commands to configure the user’s &lt;code class=&quot;highlighter-rouge&quot;&gt;.ssh&lt;/code&gt; directory:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo mkdir -p /home/deploy/.ssh
sudo touch /home/deploy/.ssh/authorized_keys
sudo chmod 700 /home/deploy/.ssh
sudo chmod 644 /home/deploy/.ssh/authorized_keys
sudo chown -R deploy:deploy /home/deploy
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt; on the target server:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /etc/ssh/sshd_config
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Verify that password authentication is set to “no”:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PasswordAuthentication no
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;add-deploy-to-sudoers&quot;&gt;Add deploy to sudoers&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Finally we'll add the user to sudo.

As `root` on the target machine:
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;visudo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This will open the sudoers file where we can add the &lt;code class=&quot;highlighter-rouge&quot;&gt;deploy&lt;/code&gt; users privileges below &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt; like this:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# User privilege specification&lt;/span&gt;

root &lt;span class=&quot;nv&quot;&gt;ALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;ALL:ALL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ALL

deploy &lt;span class=&quot;nv&quot;&gt;ALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;ALL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: ALL
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;add-ssh-public-key-to-authorizedkeys&quot;&gt;Add ssh public key to authorized_keys&lt;/h3&gt;

&lt;p&gt;In another terminal window, on your local machine:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat ~/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;On the target server, paste the key into authorized_keys:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /home/deploy/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now we can safely log in and work as the &lt;code class=&quot;highlighter-rouge&quot;&gt;deploy&lt;/code&gt; user on the target machine without having to enter a password.&lt;/p&gt;

&lt;p&gt;Now go to Basic Hardening article to remove root login&lt;/p&gt;

&lt;h3 id=&quot;set-up-your-firewall-on-ubuntu&quot;&gt;Set up your firewall on Ubuntu&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-18-04&quot;&gt;https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-18-04&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ubuntu 18.04 servers can use the UFW firewall to make sure only connections to certain services are allowed. We can set up a basic firewall very easily using this application.&lt;/p&gt;

&lt;p&gt;Different applications can register their profiles with UFW upon installation. These profiles allow UFW to manage these applications by name. OpenSSH, the service allowing us to connect to our server now, has a profile registered with UFW.&lt;/p&gt;

&lt;p&gt;You can see this by typing:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ufw app list
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Available applications:
  OpenSSH
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We need to make sure that the firewall allows SSH connections so that we can log back in next time. We can allow these connections by typing:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ufw allow OpenSSH
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Afterwards, we can enable the firewall by typing:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ufw &lt;span class=&quot;nb&quot;&gt;enable&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Type “&lt;code class=&quot;highlighter-rouge&quot;&gt;y&lt;/code&gt;” and press &lt;code class=&quot;highlighter-rouge&quot;&gt;ENTER&lt;/code&gt; to proceed. You can see that SSH connections are still allowed by typing:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ufw status
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Status: active

To                         Action      From
--                         ------      ----
OpenSSH                    ALLOW       Anywhere
OpenSSH &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;v6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;               ALLOW       Anywhere &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;v6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As &lt;strong&gt;the firewall is currently blocking all connections except for SSH&lt;/strong&gt;, if you install and configure additional services, you will need to adjust the firewall settings to allow acceptable traffic in. You can learn some common UFW operations in &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/ufw-essentials-common-firewall-rules-and-commands&quot;&gt;this guide&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;step-4-target-server---install-asdf&quot;&gt;Step 4: Target Server - Install asdf&lt;/h2&gt;

&lt;p&gt;Sometimes, you’ll need to install specific versions or Erlang, Elixir or Node, and we’ll use &lt;code class=&quot;highlighter-rouge&quot;&gt;[asdf](https://github.com/asdf-vm/asdf)&lt;/code&gt;, a version manager to tackle this complex task.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;asdf&lt;/code&gt; is an extendable version manager with support for Ruby, Node.js, Elixir, Erlang &amp;amp; more.&lt;/p&gt;

&lt;p&gt;To install it, we’ll first switch over to our newly created &lt;code class=&quot;highlighter-rouge&quot;&gt;deploy&lt;/code&gt; user.&lt;/p&gt;

&lt;p&gt;On the target server as &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;su deploy
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# move into deploy's home path&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;install-asdf&quot;&gt;Install asdf&lt;/h3&gt;

&lt;p&gt;Install dependencies:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo add-apt-repository &lt;span class=&quot;s2&quot;&gt;&quot;deb http://archive.ubuntu.com/ubuntu &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;lsb_release -sc&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; main universe restricted multiverse&quot;&lt;/span&gt;

sudo add-apt-repository &lt;span class=&quot;s2&quot;&gt;&quot;deb http://archive.ubuntu.com/ubuntu &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;lsb_release -sc&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; universe&quot;&lt;/span&gt;

sudo apt-get update

sudo apt-get install -y build-essential git wget libssl-dev libreadline-dev &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  libncurses5-dev zlib1g-dev m4 curl wx-common libwxgtk3.0-dev autoconf &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  libxml2-utils xsltproc fop unixodbc unixodbc-bin unixodbc-dev

sudo apt-get install openjdk-8-jdk
sudo apt-get autoremove
sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ensure that you are using the deploy account, and clone the repo:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/asdf-vm/asdf.git ~/.asdf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then add the shims and source the changes:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s1&quot;&gt;'\n. $HOME/.asdf/asdf.sh'&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s1&quot;&gt;'\n. $HOME/.asdf/completions/asdf.bash'&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After this you need to add asdf to your deploy user bash profile:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~
vim ~/.profile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Add this at the end of your profile:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;. &lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.asdf/asdf.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;optional-step-if-you-are-on-5-digital-ocean-droplet&quot;&gt;Optional step if you are on $5 Digital Ocean Droplet&lt;/h3&gt;

&lt;p&gt;For $5 droplet, asdf only works if you create a swapspace (I set it to 4GB) and wait a bit for asdf to install and build erlang felt like 30 min. See solution: (&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-add-swap-space-on-ubuntu-18-04&quot;&gt;https://www.digitalocean.com/community/tutorials/how-to-add-swap-space-on-ubuntu-18-04&lt;/a&gt;) See the problem reported: (&lt;a href=&quot;https://github.com/asdf-vm/asdf-erlang/issues/91&quot;&gt;https://github.com/asdf-vm/asdf-erlang/issues/91&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Switch to root to create swap space.&lt;/p&gt;

&lt;p&gt;We can see if the system has any configured swap by typing:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo swapon --show
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can verify that there is no active swap using the &lt;code class=&quot;highlighter-rouge&quot;&gt;free&lt;/code&gt; utility:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;free -h
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Create swap file. The size of swap file is usually double your ram. But do 4G minimum.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo fallocate -l 4G /swapfile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We can verify that the correct amount of space was reserved by typing:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls -lh /swapfile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Enabling the swap file&lt;/p&gt;

&lt;p&gt;Now that we have a file of the correct size available, we need to actually turn this into swap space.&lt;/p&gt;

&lt;p&gt;First, we need to lock down the permissions of the file so that only the users with &lt;strong&gt;root&lt;/strong&gt; privileges can read the contents. This prevents normal users from being able to access the file, which would have significant security implications.&lt;/p&gt;

&lt;p&gt;Make the file only accessible to &lt;strong&gt;root&lt;/strong&gt; by typing:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo chmod 600 /swapfile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Verify the permissions change by typing:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls -lh /swapfile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As you can see, only the &lt;strong&gt;root&lt;/strong&gt; user has the read and write flags enabled.&lt;/p&gt;

&lt;p&gt;We can now mark the file as swap space by typing:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo mkswap /swapfile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
Output

Setting up swapspace version 1, size = 1024 MiB (1073737728 bytes)
no label, UUID=6e965805-2ab9-450f-aed6-577e74089dbf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After marking the file, we can enable the swap file, allowing our system to start utilizing it:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo swapon /swapfile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Verify that the swap is available by typing:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo swapon --show
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Making the swapfile permanent&lt;/p&gt;

&lt;p&gt;Our recent changes have enabled the swap file for the current session. However, if we reboot, the server will not retain the swap settings automatically. We can change this by adding the swap file to our &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/fstab&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Back up the &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/fstab&lt;/code&gt; file in case anything goes wrong:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo cp /etc/fstab /etc/fstab.bak
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Add the swap file information to the end of your &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/fstab&lt;/code&gt; file by typing:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/swapfile none swap sw 0 0'&lt;/span&gt; | sudo tee -a /etc/fstab
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now switch to deploy user and check to see if asdf by typing &lt;code class=&quot;highlighter-rouge&quot;&gt;asdf&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;step-5-target-server---install-erlangelixir&quot;&gt;Step 5: Target Server - Install Erlang/Elixir&lt;/h2&gt;

&lt;p&gt;Because we need our Phoenix project to run on both the local development machine and the production server, we’ll need to install the same languages and tools in both places. Erlang 21.1, and Elixir 1.7.4.&lt;/p&gt;

&lt;h3 id=&quot;install-erlang&quot;&gt;Install Erlang&lt;/h3&gt;

&lt;p&gt;We’re going to use &lt;code class=&quot;highlighter-rouge&quot;&gt;asdf&lt;/code&gt; to install Erlang. I uses plugins for different libraries, so let’s add the plugin:&lt;/p&gt;

&lt;p&gt;As &lt;code class=&quot;highlighter-rouge&quot;&gt;deploy&lt;/code&gt; on the target machine:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;asdf plugin-add erlang
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Install Erlang/OTP 22 (or whichever version your app needs)&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;asdf install erlang 22.0
asdf global erlang 22.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;OPTIONAL If anything went wrong or if dependencies skipped&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;asdf plugin-remove erlang
asdf plugin-remove elixir
asdf plugin-add erlang
asdf plugin-add elixir
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;install-elixir&quot;&gt;Install Elixir&lt;/h3&gt;

&lt;p&gt;As &lt;code class=&quot;highlighter-rouge&quot;&gt;deploy&lt;/code&gt; add the plugin:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;asdf plugin-add elixir
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Install Elixir and make it global:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;asdf install elixir 1.8.2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;asdf global elixir 1.8.2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now you can open a new terminal and try &lt;code class=&quot;highlighter-rouge&quot;&gt;erl&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;erl
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And you can try &lt;code class=&quot;highlighter-rouge&quot;&gt;iex&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iex
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;asdf&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;.tool-versions&lt;/code&gt; file to manage which version is active on each of your projects.&lt;/p&gt;

&lt;p&gt;Use Mix to install Hex.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; mix local.hex
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;step-6-target-server---install-nodejs&quot;&gt;Step 6: Target Server - Install Nodejs&lt;/h2&gt;

&lt;p&gt;Installing Node is straightforward with a few commands.&lt;/p&gt;

&lt;p&gt;NOTE: Look up what NODE version to install. Replace XX with version number such as 12. see &lt;a href=&quot;https://github.com/nodesource/distributions/blob/master/README.md&quot;&gt;https://github.com/nodesource/distributions/blob/master/README.md&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt install curl
curl -sL https://deb.nodesource.com/setup_XX.x | sudo -E bash -
sudo apt-get install -y nodejs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;step-7-target-server---install-postgresql&quot;&gt;Step 7: Target Server - Install Postgresql&lt;/h2&gt;

&lt;p&gt;base on &lt;a href=&quot;https://computingforgeeks.com/install-postgresql-11-on-ubuntu-18-04-ubuntu-16-04/&quot;&gt;https://computingforgeeks.com/install-postgresql-11-on-ubuntu-18-04-ubuntu-16-04/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt; on the target server:&lt;/p&gt;

&lt;p&gt;Add PostgreSQL 11 APT repository (for Bionic 18.04 ubuntu)&lt;/p&gt;

&lt;p&gt;https://www.postgresql.org/download/linux/ubuntu/&lt;/p&gt;

&lt;p&gt;Create the file /etc/apt/sources.list.d/pgdg.list and add a line for the repository.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /etc/apt/sources.list.d/pgdg.list
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Add this line:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Import the repository signing key, and update the package lists :&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;install-postgresql-11-on-ubuntu-1804--ubuntu-1604&quot;&gt;Install PostgreSQL 11 on Ubuntu 18.04 / Ubuntu 16.04&lt;/h3&gt;

&lt;p&gt;After importing GPG key, add repository contents to your Ubuntu 18.04/16.04 system:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install postgresql-11
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Verify repository file contents&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat /etc/apt/sources.list.d/pgdg.list
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;create-new-database-user&quot;&gt;Create new database user&lt;/h3&gt;

&lt;p&gt;During the postgres installation, a postgres root user &lt;code class=&quot;highlighter-rouge&quot;&gt;postgres&lt;/code&gt; was created, but we don’t want to connect to the server with this user. Let’s create a separate postgres user for our app.&lt;/p&gt;

&lt;p&gt;You can switch to the postgres user with &lt;code class=&quot;highlighter-rouge&quot;&gt;su postgres&lt;/code&gt; than back to root with &lt;code class=&quot;highlighter-rouge&quot;&gt;exit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;On the target server, switch to the &lt;code class=&quot;highlighter-rouge&quot;&gt;postgres&lt;/code&gt; user, create a &lt;code class=&quot;highlighter-rouge&quot;&gt;phx&lt;/code&gt; database user and set the new user’s password:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;su postgres
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~

&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;createuser phx --pwprompt
Enter password &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;new role: 
Enter it again:
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;NOTE: Remember these credentials as they’ll be used once we configure our Phoenix application for production.&lt;/p&gt;

&lt;h3 id=&quot;create-production-database&quot;&gt;Create production database:&lt;/h3&gt;

&lt;p&gt;We’ll need to create our production database manually as edeliver only manages migrations.&lt;/p&gt;

&lt;p&gt;As &lt;code class=&quot;highlighter-rouge&quot;&gt;postgres&lt;/code&gt; on the target server:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;createdb fumigate_prod
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then log in to &lt;code class=&quot;highlighter-rouge&quot;&gt;psql&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;psql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ensure that you are logged into the postgres cli tool and run:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GRANT ALL PRIVILEGES ON DATABASE fumigate_prod TO phx;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This gives our new &lt;code class=&quot;highlighter-rouge&quot;&gt;phx&lt;/code&gt; user access to the newly created database. Exit psql with &lt;code class=&quot;highlighter-rouge&quot;&gt;\q&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;database-credentials&quot;&gt;Database credentials:&lt;/h3&gt;

&lt;p&gt;To re-cap:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;username: &lt;code class=&quot;highlighter-rouge&quot;&gt;phx&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;password: &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;yourpass&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;database: fumigate&lt;code class=&quot;highlighter-rouge&quot;&gt;_prod&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-8-target-server---production-configuration&quot;&gt;Step 8: Target Server - Production Configuration&lt;/h2&gt;

&lt;h3 id=&quot;create-prodsecretexs&quot;&gt;Create prod.secret.exs&lt;/h3&gt;

&lt;p&gt;You may have noticed that Phoenix created a &lt;code class=&quot;highlighter-rouge&quot;&gt;config/prod.secret.exs&lt;/code&gt; file. This is imported by &lt;code class=&quot;highlighter-rouge&quot;&gt;config/prod.exs&lt;/code&gt; but is ignored by git by default. We’ll need to create this file on the target machine so edeliver can symlink to it during the build process.&lt;/p&gt;

&lt;p&gt;We’re also going to store our applications in &lt;code class=&quot;highlighter-rouge&quot;&gt;~/apps/&amp;lt;appname&amp;gt;&lt;/code&gt; format which is the equivalent of &lt;code class=&quot;highlighter-rouge&quot;&gt;/home/deploy/apps/&amp;lt;appname&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let’s switch over to our deploy user. On the target machine:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;su deploy
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Make a new directory for our secrets:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir -p apps/fumigate/secret
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then create a new &lt;code class=&quot;highlighter-rouge&quot;&gt;prod.secret.exs&lt;/code&gt; file in that directory:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim ~/apps/fumigate/secret/prod.secret.exs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Add this content to it:&lt;/p&gt;

&lt;div class=&quot;language-elixir highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Mix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Config&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:fumigate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FumigateWeb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Endpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

 &lt;span class=&quot;ss&quot;&gt;secret_key_base:&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;YOURKEYHERE+v7fAdFNvoSZpUwTU96jA0UjEF1sgiVwdI5F&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:fumigate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Fumigate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Repo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

 &lt;span class=&quot;ss&quot;&gt;username:&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;phx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

 &lt;span class=&quot;ss&quot;&gt;password:&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;yourpassword&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

 &lt;span class=&quot;ss&quot;&gt;database:&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;fumigate_prod&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

 &lt;span class=&quot;ss&quot;&gt;pool_size:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can generate a new secret key by using &lt;code class=&quot;highlighter-rouge&quot;&gt;mix phx.gen.secret&lt;/code&gt; on your local machine.&lt;/p&gt;

&lt;p&gt;IMPORTANT: Update the file to have a production ready secret key, and the database credentials you set from earlier.&lt;/p&gt;

&lt;h2 id=&quot;step-9-install-distillery-and-edeliver&quot;&gt;Step 9: Install Distillery and edeliver&lt;/h2&gt;

&lt;p&gt;As previously mentioned, &lt;a href=&quot;https://github.com/bitwalker/distillery&quot;&gt;Distillery&lt;/a&gt; compiles our Phoenix application into releases, and &lt;a href=&quot;https://github.com/edeliver/edeliver&quot;&gt;edeliver&lt;/a&gt; uses ssh and scp to build and deploy the releases to our production server.&lt;/p&gt;

&lt;p&gt;On your local machine, open &lt;code class=&quot;highlighter-rouge&quot;&gt;mix.exs&lt;/code&gt; and add 2 deps:&lt;/p&gt;

&lt;div class=&quot;language-elixir highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:edeliver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;gt;= 1.6.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:distillery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;~&amp;gt; 2.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;warn_missing:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And add &lt;code class=&quot;highlighter-rouge&quot;&gt;:edeliver&lt;/code&gt; to extra_applications in the &lt;code class=&quot;highlighter-rouge&quot;&gt;application&lt;/code&gt; block:&lt;/p&gt;

&lt;div class=&quot;language-elixir highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;application&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;   
      &lt;span class=&quot;ss&quot;&gt;mod:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Fumigate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]},&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;extra_applications:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:runtime_tools&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:edeliver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;   
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Use mix to install deps:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix deps.get
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;initialize-distillery&quot;&gt;Initialize Distillery&lt;/h3&gt;

&lt;p&gt;Distillery requires a build configuration file that is not generated by default.&lt;/p&gt;

&lt;p&gt;Let’s generate it with:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix distillery.init
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This generates configuration files for Distillery in the &lt;code class=&quot;highlighter-rouge&quot;&gt;rel&lt;/code&gt; directory. We don’t need to make any changes to the default config.&lt;/p&gt;

&lt;p&gt;We now need to exclude &lt;code class=&quot;highlighter-rouge&quot;&gt;.deliver/releases/&lt;/code&gt; from our git repo.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.deliver/releases/&quot;&lt;/span&gt; &amp;gt;&amp;gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;configure-edeliver&quot;&gt;Configure edeliver&lt;/h3&gt;

&lt;p&gt;Create a &lt;code class=&quot;highlighter-rouge&quot;&gt;.deliver&lt;/code&gt; directory in your project folder and add the &lt;code class=&quot;highlighter-rouge&quot;&gt;config&lt;/code&gt; file:
(Change the IP to your server IP 134.209.8.141)&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

 &lt;span class=&quot;nv&quot;&gt;APP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fumigate&quot;&lt;/span&gt;

 &lt;span class=&quot;nv&quot;&gt;BUILD_HOST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;134.209.8.141&quot;&lt;/span&gt;
 &lt;span class=&quot;nv&quot;&gt;BUILD_USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;deploy&quot;&lt;/span&gt;
 &lt;span class=&quot;nv&quot;&gt;BUILD_AT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/tmp/edeliver/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$APP&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/builds&quot;&lt;/span&gt;

 &lt;span class=&quot;nv&quot;&gt;START_DEPLOY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true
 &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CLEAN_DEPLOY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
 
 &lt;span class=&quot;c&quot;&gt;# prevent re-installing node modules; this defaults to &quot;.&quot;&lt;/span&gt;
 &lt;span class=&quot;nv&quot;&gt;GIT_CLEAN_PATHS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;_build rel priv/static&quot;&lt;/span&gt;

 &lt;span class=&quot;nv&quot;&gt;PRODUCTION_HOSTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;134.209.8.141&quot;&lt;/span&gt;
 &lt;span class=&quot;nv&quot;&gt;PRODUCTION_USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;deploy&quot;&lt;/span&gt;
 &lt;span class=&quot;nv&quot;&gt;DELIVER_TO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/home/deploy/apps&quot;&lt;/span&gt;


 &lt;span class=&quot;c&quot;&gt;# For Phoenix projects, symlink prod.secret.exs to our tmp source&lt;/span&gt;
 pre_erlang_get_and_update_deps&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_prod_secret_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/home/deploy/apps/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$APP&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/secret/prod.secret.exs&quot;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TARGET_MIX_ENV&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;prod&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then
     &lt;/span&gt;status &lt;span class=&quot;s2&quot;&gt;&quot;Linking '&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_prod_secret_path&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'&quot;&lt;/span&gt;
     __sync_remote &lt;span class=&quot;s2&quot;&gt;&quot;
       [ -f ~/.profile ] &amp;amp;&amp;amp; source ~/.profile
       mkdir -p '&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$BUILD_AT&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'
       ln -sfn '&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_prod_secret_path&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$BUILD_AT&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/config/prod.secret.exs'
     &quot;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

 pre_erlang_clean_compile&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   status &lt;span class=&quot;s2&quot;&gt;&quot;Running npm install&quot;&lt;/span&gt;
     __sync_remote &lt;span class=&quot;s2&quot;&gt;&quot;
       [ -f ~/.profile ] &amp;amp;&amp;amp; source ~/.profile
       set -e
       cd '&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$BUILD_AT&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'/assets
       npm install
     &quot;&lt;/span&gt;

   status &lt;span class=&quot;s2&quot;&gt;&quot;Compiling assets&quot;&lt;/span&gt;
      __sync_remote &lt;span class=&quot;s2&quot;&gt;&quot;
       [ -f ~/.profile ] &amp;amp;&amp;amp; source ~/.profile
       set -e
       cd '&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$BUILD_AT&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'/assets
       node_modules/.bin/webpack --mode production --silent
     &quot;&lt;/span&gt;

   status &lt;span class=&quot;s2&quot;&gt;&quot;Running phoenix.digest&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# log output prepended with &quot;-----&amp;gt;&quot;&lt;/span&gt;
   __sync_remote &lt;span class=&quot;s2&quot;&gt;&quot; # runs the commands on the build host
     [ -f ~/.profile ] &amp;amp;&amp;amp; source ~/.profile # load profile (optional)
     set -e # fail if any command fails (recommended)
     cd '&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$BUILD_AT&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;' # enter the build directory on the build host (required)
          # prepare something
     mkdir -p priv/static # required by the phoenix.digest task
     # run your custom task
     APP='&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$APP&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;' MIX_ENV='&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TARGET_MIX_ENV&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;' &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$MIX_CMD&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; phx.digest &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SILENCE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
     APP='&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$APP&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;' MIX_ENV='&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TARGET_MIX_ENV&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;' &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$MIX_CMD&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; phx.digest.clean &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SILENCE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
   &quot;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;These are mostly environment variables use by Edeliver in the shell scripts. Go through them one by one and try to understand what they’re doing.&lt;/p&gt;

&lt;p&gt;You can read more about the configuration variables in their &lt;a href=&quot;https://github.com/edeliver/edeliver/wiki/Configuration-(.deliver-config)&quot;&gt;Wiki&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Don’t forget to update your host configuration&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The custom functions are hooks that run during different phases of the deployment.&lt;/p&gt;

&lt;p&gt;You can also read more about running additional tasks in their &lt;a href=&quot;https://github.com/edeliver/edeliver/wiki/Run-additional-build-tasks&quot;&gt;Wiki&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;project-prod-configuration&quot;&gt;Project prod configuration&lt;/h3&gt;

&lt;p&gt;We’ll need to make some changes to the default production configuration in our project.&lt;/p&gt;

&lt;p&gt;DO NOT RUN ON PORT 80. KEEP IT AT 4000. The application is running on deploy there fore it cannot run on port 80. We need to route incoming requests from 80 http and https to port 4000. Do not attempt to run app as root. That’s asking for trouble. Source: &lt;a href=&quot;https://elixirforum.com/t/running-on-ec2-giving-error/13574/5&quot;&gt;https://elixirforum.com/t/running-on-ec2-giving-error/13574/5&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open &lt;code class=&quot;highlighter-rouge&quot;&gt;config/prod.exs&lt;/code&gt; and update it to this:&lt;/p&gt;

&lt;div class=&quot;language-elixir highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Mix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Config&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:fumigate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FumigateWeb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Endpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;ss&quot;&gt;http:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:inet6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;port:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;PORT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
   &lt;span class=&quot;ss&quot;&gt;url:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;host:&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;fumigatedb.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;port:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
   &lt;span class=&quot;ss&quot;&gt;cache_static_manifest:&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;priv/static/cache_manifest.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;ss&quot;&gt;server:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;ss&quot;&gt;code_reloader:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;

 &lt;span class=&quot;c1&quot;&gt;# Do not print debug messages in production&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;level:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:info&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# ## SSL Support&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# To get SSL working, you will need to add the `https` key&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# to the previous section and set your `:url` port to 443:&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#     config :fumigate, FumigateWeb.Endpoint,&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#       ...&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#       url: [host: &quot;example.com&quot;, port: 443],&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#       https: [&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#         :inet6,&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#         port: 443,&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#         cipher_suite: :strong,&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#         keyfile: System.get_env(&quot;SOME_APP_SSL_KEY_PATH&quot;),&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#         certfile: System.get_env(&quot;SOME_APP_SSL_CERT_PATH&quot;)&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#       ]&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# The `cipher_suite` is set to `:strong` to support only the&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# latest and more secure SSL ciphers. This means old browsers&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# and clients may not be supported. You can set it to&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# `:compatible` for wider support.&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# `:keyfile` and `:certfile` expect an absolute path to the key&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# and cert in disk or a relative path inside priv, for example&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# &quot;priv/ssl/server.key&quot;. For all supported SSL configuration&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# options, see https://hexdocs.pm/plug/Plug.SSL.html#configure/1&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# We also recommend setting `force_ssl` in your endpoint, ensuring&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# no data is ever sent via http, always redirecting to https:&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#     config :fumigate, FumigateWeb.Endpoint,&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#       force_ssl: [hsts: true]&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# Check `Plug.SSL` for all available options in `force_ssl`.&lt;/span&gt;

 &lt;span class=&quot;c1&quot;&gt;# ## Using releases (distillery)&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# If you are doing OTP releases, you need to instruct Phoenix&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# to start the server for all endpoints:&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:phoenix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:serve_endpoints&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# Alternatively, you can configure exactly which server to&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# start per endpoint:&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#     config :fumigate, FumigateWeb.Endpoint, server: true&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# Note you can't rely on `System.get_env/1` when using releases.&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# See the releases documentation accordingly.&lt;/span&gt;

 &lt;span class=&quot;c1&quot;&gt;# Finally import the config/prod.secret.exs which should be versioned&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# separately.&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;import_config&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;prod.secret.exs&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;These are settings recommended by Distillery. You might notice that we’re setting the system port using the &lt;code class=&quot;highlighter-rouge&quot;&gt;PORT&lt;/code&gt; environment variable. This needs to be available during the build process and we can add it to the &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.profile&lt;/code&gt; file on our production server.&lt;/p&gt;

&lt;h3 id=&quot;add-env-variables-to-target-server&quot;&gt;Add env Variables to Target Server&lt;/h3&gt;

&lt;p&gt;Login as &lt;code class=&quot;highlighter-rouge&quot;&gt;deploy&lt;/code&gt; to the target server.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~
vim ~/.profile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And add these lines:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export MIX_ENV=prod
export PORT=4000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This will ensure that our system runs on port 4000, and that the environment is set to &lt;code class=&quot;highlighter-rouge&quot;&gt;prod&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Logout of deploy and log back in for ~/.profile be in effect&lt;/p&gt;

&lt;h2 id=&quot;step-10-deployment&quot;&gt;Step 10: Deployment&lt;/h2&gt;

&lt;p&gt;We’re finally ready to build and deploy our first release. The default version is &lt;code class=&quot;highlighter-rouge&quot;&gt;0.1.0&lt;/code&gt; so let’s just keep that for now.&lt;/p&gt;

&lt;p&gt;Warning: the commands for building and deploy can seem complicated at first but once you become familiar with them, you will see that they use a natural language style.&lt;/p&gt;

&lt;h3 id=&quot;build-the-production-release&quot;&gt;Build the production release:&lt;/h3&gt;

&lt;p&gt;NOTE: edeliver uses &lt;strong&gt;git master branch&lt;/strong&gt; to build the code into release package.&lt;/p&gt;

&lt;p&gt;In your project directory and git master branch:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix edeliver build release production --verbose
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This builds the release on the target server, and stores the archive in your local &lt;code class=&quot;highlighter-rouge&quot;&gt;.edeliver/releases&lt;/code&gt; directory.&lt;/p&gt;

&lt;h3 id=&quot;deploy-the-reload-to-production&quot;&gt;Deploy the reload to production:&lt;/h3&gt;

&lt;p&gt;In your project directory:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix edeliver deploy release to production --verbose
mix edeliver migrate production --verbose
mix edeliver start production --verbose
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Other neat edeliver commands:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix edeliver ping production &lt;span class=&quot;c&quot;&gt;# shows which nodes are up and running&lt;/span&gt;
mix edeliver version production &lt;span class=&quot;c&quot;&gt;# shows the release version running on the nodes&lt;/span&gt;
mix edeliver show migrations on production &lt;span class=&quot;c&quot;&gt;# shows pending database migrations&lt;/span&gt;
mix edeliver migrate production &lt;span class=&quot;c&quot;&gt;# run database migrations&lt;/span&gt;
mix edeliver restart production &lt;span class=&quot;c&quot;&gt;# or start or stop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can read more about Edeliver in their &lt;a href=&quot;https://github.com/edeliver/edeliver&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;view-our-website-on-our-server&quot;&gt;View our website on our server&lt;/h3&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh deploy@188.166.182.170
curl localhost:4000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;step-11-generating-ssl-cert---before-routing-incoming-http-request-to-port-4000-our-phoenix-app&quot;&gt;Step 11: Generating SSL CERT - BEFORE Routing incoming http request to port 4000 (our phoenix app)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-use-certbot-standalone-mode-to-retrieve-let-s-encrypt-ssl-certificates-on-ubuntu-1804&quot;&gt;https://www.digitalocean.com/community/tutorials/how-to-use-certbot-standalone-mode-to-retrieve-let-s-encrypt-ssl-certificates-on-ubuntu-1804&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/certbot/certbot/issues/5257&quot;&gt;https://github.com/certbot/certbot/issues/5257&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We should generate SSL Certificate. The certbot generator needs port 80. So you need to do this before rerouting incoming port 80 requests to our phoenix web app that’s listening on port 4000.&lt;/p&gt;

&lt;h3 id=&quot;step-1--installing-certbot&quot;&gt;Step 1 — Installing Certbot&lt;/h3&gt;

&lt;p&gt;The first step to using Let’s Encrypt to obtain an SSL certificate is to install the Certbot software on your server.&lt;/p&gt;

&lt;p&gt;Certbot is in very active development, so the Certbot packages provided by Ubuntu tend to be outdated. However, the Certbot developers maintain a Ubuntu software repository with up-to-date versions, so we’ll use that repository instead.&lt;/p&gt;

&lt;p&gt;First, add the repository:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo add-apt-repository ppa:certbot/certbot
apt-get update
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Install certbot:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install certbot
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;step-2--generating-certificate&quot;&gt;Step 2 — Generating Certificate&lt;/h3&gt;

&lt;p&gt;Make sure that your firewall is accepting port 80.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ufw allow 80
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Generate the SSL cert:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo certbot certonly --standalone --preferred-challenges http -d fumigatedb.com -d www.fumigatedb.com
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Enable it so deploy user and app own by deploy can read those certs:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chmod 755 /etc/letsencrypt/live/
chmod 755 /etc/letsencrypt/archive/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We’ll get back to using cert on the server soon in step 14.&lt;/p&gt;

&lt;h2 id=&quot;step-12-routing-incoming-http-request-to-port-4000-our-phoenix-app&quot;&gt;Step 12: Routing incoming http request to port 4000 (our phoenix app)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://serverfault.com/questions/238563/can-i-use-ufw-to-setup-a-port-forward&quot;&gt;https://serverfault.com/questions/238563/can-i-use-ufw-to-setup-a-port-forward&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s say you want to forward requests going to 80 (http) to a server listening on port 4000.&lt;/p&gt;

&lt;p&gt;Note that you will need to make sure port 8080 is allowed, otherwise ufw will block the requests that are redirected to 4000.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ufw allow 4000/tcp
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There are no ufw commands for setting up the port forwards, so it must be done via configuraton files. Add the lines below to &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/ufw/before.rules&lt;/code&gt;, before the &lt;code class=&quot;highlighter-rouge&quot;&gt;filter&lt;/code&gt; section, right at the top of the file:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /etc/ufw/before.rules
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*nat
:PREROUTING ACCEPT [0:0]
-A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 4000
COMMIT
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then restart the server:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo reboot
ssh deploy@134.209.8.141
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Enable ufw to start on boot:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ufw &lt;span class=&quot;nb&quot;&gt;enable&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Debug tips: check &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/log/syslog&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-13-fail2ban&quot;&gt;Step 13: Fail2ban&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.lifewire.com/harden-ubuntu-server-security-4178243&quot;&gt;https://www.lifewire.com/harden-ubuntu-server-security-4178243&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.techrepublic.com/article/how-to-install-fail2ban-on-ubuntu-server-18-04/&quot;&gt;https://www.techrepublic.com/article/how-to-install-fail2ban-on-ubuntu-server-18-04/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The fail2ban system is an intrusion prevention system that monitors log files and searches for particular patterns that correspond to a failed login attempt. If a certain number of failed logins are detected from a specific IP address (within a specified amount of time), fail2ban will block access from that IP address.&lt;/p&gt;

&lt;p&gt;To install fail2ban, open a terminal window and issue the command:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get update
sudo apt-get upgrade
sudo apt-get install -y fail2ban
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Within the directory&lt;code class=&quot;highlighter-rouge&quot;&gt; /etc/fail2ban&lt;/code&gt;&lt;em&gt;,&lt;/em&gt; you’ll find the main configuration file, jail.conf. Also in that directory is the subdirectory, jail.d. The jail.conf file is the main configuration file and jail.d contains the secondary configuration files. Do not edit the jail.conf file. Instead, we’ll create a new configuration that will monitor SSH logins with the command:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /etc/fail2ban/jail.local
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In this new file add the following contents:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;sshd]
    enabled &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true
    &lt;/span&gt;port &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 22
    filter &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; sshd
    logpath &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /var/log/auth.log
    maxretry &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This configuration does the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Enables the jail.&lt;/li&gt;
  &lt;li&gt;Sets the SSH port to be monitored to 22.&lt;/li&gt;
  &lt;li&gt;Uses the sshd filter.&lt;/li&gt;
  &lt;li&gt;Sets the log file to be monitored.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Save and close that file. Restart fail2ban with the command:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl start fail2ban
sudo systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;fail2ban
sudo systemctl restart fail2ban
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you attempt to Secure Shell into that server and fail the log in three times (set as the default by fail2ban), access will be then blocked from the &lt;a href=&quot;https://www.lifewire.com/what-is-an-ip-address-2625920&quot;&gt;IP address&lt;/a&gt; you are working from.&lt;/p&gt;

&lt;h3 id=&quot;testing-and-unbanning&quot;&gt;Testing and unbanning&lt;/h3&gt;

&lt;p&gt;You can test to make sure the new jail works by failing three attempts at logging into the server, via ssh. After the third failed attempt, the connection will hang. Hit [Ctrl]+[c] to escape and then attempt to SSH back into the server. You should no longer be able to SSH into that server from the IP address you were using.&lt;/p&gt;

&lt;p&gt;You can then unban your test IP address with the following command:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo fail2ban-client &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;sshd unbanip IP_ADDRESS
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;where IP_ADDRESS is the banned IP Address.&lt;/p&gt;

&lt;p&gt;You should now be able to log back into the server with SSH.&lt;/p&gt;

&lt;h3 id=&quot;scratching-the-surface&quot;&gt;Scratching the surface&lt;/h3&gt;

&lt;p&gt;This barely scratches the surface as to what fail2ban can do. But now you have a good idea on how to use the system. To find out more, make sure to read the man page with the command:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;man fail2ban
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That manual page provides a good overview of what fail2ban can do.&lt;/p&gt;

&lt;h2 id=&quot;step-14-port-foward-ssl-to-port-4001&quot;&gt;Step 14: Port foward SSL to Port 4001&lt;/h2&gt;

&lt;p&gt;Set up the firewall:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ufw allow https
sudo ufw allow 443
sudo ufw allow 4001
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There are no ufw commands for setting up the port forwards, so it must be done via configuraton files. Add the lines below to &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/ufw/before.rules&lt;/code&gt;, before the &lt;code class=&quot;highlighter-rouge&quot;&gt;filter&lt;/code&gt; section, right at the top of the file:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /etc/ufw/before.rules
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*nat
:PREROUTING ACCEPT [0:0]
-A PREROUTING -p tcp --dport 443 -j REDIRECT --to-port 4001
COMMIT
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then restart the server:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ufw &lt;span class=&quot;nb&quot;&gt;enable
&lt;/span&gt;sudo reboot
ssh deploy@134.209.8.141
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;step-15-ssl&quot;&gt;Step 15: SSL&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.progressplum.app/ssl-migration-from-nginx-to-cowboy-2-in-phoenix-1-4/&quot;&gt;https://blog.progressplum.app/ssl-migration-from-nginx-to-cowboy-2-in-phoenix-1-4/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@zek/secure-your-phoenix-app-with-free-ssl-48ac749c17d7&quot;&gt;https://medium.com/@zek/secure-your-phoenix-app-with-free-ssl-48ac749c17d7&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-1--generating-diffie-hellman-parameters&quot;&gt;Step 1 — Generating Diffie Hellman parameters&lt;/h3&gt;

&lt;p&gt;If you don’t already have a set of Diffie Hellman parameters&lt;a href=&quot;https://blog.progressplum.app/ssl-migration-from-nginx-to-cowboy-2-in-phoenix-1-4/#2&quot;&gt;[2]&lt;/a&gt; to use with your SSL, generate a new set for extra security. Run this command on the server but be aware that it’s very CPU-intensive and may take a while on a slow VPS.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl dhparam -out /etc/letsencrypt/dhparam.pem 4096
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;step-2--set-up-your-environment&quot;&gt;Step 2 — Set up your environment&lt;/h3&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim ~/.profile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MIX_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;prod

&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4000

&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SPORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4001

&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SSL_CERT_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/letsencrypt/live/fumigatedb.com/cert.pem

&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SSL_CACERT_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/letsencrypt/live/fumigatedb.com/chain.pem

&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SSL_KEY_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/letsencrypt/live/fumigatedb.com/privkey.pem

&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SSL_DHPARAM_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/letsencrypt/dhparam.pem
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Change &lt;code class=&quot;highlighter-rouge&quot;&gt;fumigatedb.com&lt;/code&gt; to your domainname.&lt;/p&gt;

&lt;h3 id=&quot;step-3--prod-configuration&quot;&gt;Step 3 — prod Configuration&lt;/h3&gt;

&lt;p&gt;Update your application’s Endpoint configuration to add SSL support in &lt;code class=&quot;highlighter-rouge&quot;&gt;config/prod.exs&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;vim config/prod.exs&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-elixir highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:fumigate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FumigateWeb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Endpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;ss&quot;&gt;url:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;scheme:&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;host:&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;fumigatedb.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;port:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;443&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
       &lt;span class=&quot;ss&quot;&gt;http:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:inet6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;port:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;PORT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
       &lt;span class=&quot;ss&quot;&gt;https:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
           &lt;span class=&quot;ss&quot;&gt;:inet6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;ss&quot;&gt;port:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;SPORT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;ss&quot;&gt;otp_app:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:fumigate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;ss&quot;&gt;cipher_suite:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:strong&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;ss&quot;&gt;keyfile:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;SSL_KEY_FILE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
           &lt;span class=&quot;ss&quot;&gt;certfile:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;SSL_CERT_FILE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
           &lt;span class=&quot;ss&quot;&gt;cacertfile:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;SSL_CACERT_FILE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
           &lt;span class=&quot;ss&quot;&gt;dhfile:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;SSL_DHPARAM_FILE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
       &lt;span class=&quot;ss&quot;&gt;cache_static_manifest:&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;priv/static/cache_manifest.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;ss&quot;&gt;server:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;ss&quot;&gt;code_reloader:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Save to git master repo and rerun edeliver again.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git commit -a -m &lt;span class=&quot;s2&quot;&gt;&quot;edited prod.exs to add HTTPS scheme&quot;&lt;/span&gt;
git push origin master
mix edeliver build release production --verbose
mix edeliver deploy release to production
mix edeliver stop production
mix edeliver start production
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Check the ssl website now with: &lt;a href=&quot;https://www.ssllabs.com/ssltest/&quot;&gt;https://www.ssllabs.com/ssltest/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-4--application-configuration-forcing-ssl&quot;&gt;Step 4 — Application Configuration forcing SSL&lt;/h3&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git commit -a -m &lt;span class=&quot;s2&quot;&gt;&quot;edited prod.exs to force SSL connection&quot;&lt;/span&gt;

git push origin master

mix edeliver build release production --verbose

mix edeliver deploy release to production

mix edeliver stop production

mix edeliver start production
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;step-5--increasing-the-security-of-ssl&quot;&gt;Step 5 — Increasing the security of SSL&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://elixirforum.com/t/making-ssl-tests-all-pass-for-phoenix-lets-encrypt/3507/11&quot;&gt;https://elixirforum.com/t/making-ssl-tests-all-pass-for-phoenix-lets-encrypt/3507/11&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-elixir highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Mix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Config&lt;/span&gt;

 &lt;span class=&quot;c1&quot;&gt;# For production, don't forget to configure the url host&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# to something meaningful, Phoenix uses this information&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# when generating URLs.&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# Note we also include the path to a cache manifest&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# containing the digested version of static files. This&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# manifest is generated by the `mix phx.digest` task,&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# which you should run after static files are built and&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# before starting your production server.&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:fumigate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FumigateWeb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Endpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;ss&quot;&gt;url:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;scheme:&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;host:&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;fumigatedb.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;port:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;443&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
   &lt;span class=&quot;ss&quot;&gt;force_ssl:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;hsts:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
   &lt;span class=&quot;ss&quot;&gt;http:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:inet6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;port:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;PORT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
   &lt;span class=&quot;ss&quot;&gt;https:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;:inet6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;ss&quot;&gt;port:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;SPORT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;ss&quot;&gt;otp_app:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:fumigate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;ss&quot;&gt;cipher_suite:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:strong&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;ss&quot;&gt;keyfile:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;SSL_KEY_FILE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
     &lt;span class=&quot;ss&quot;&gt;certfile:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;SSL_CERT_FILE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
     &lt;span class=&quot;ss&quot;&gt;cacertfile:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;SSL_CACERT_FILE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
     &lt;span class=&quot;ss&quot;&gt;dhfile:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;SSL_DHPARAM_FILE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
     &lt;span class=&quot;ss&quot;&gt;versions:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:&quot;tlsv1.2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:&quot;tlsv1.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:&quot;tlsv1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
           &lt;span class=&quot;ss&quot;&gt;ciphers:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;ECDHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ECDSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES256&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;GCM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA384&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;ECDHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ECDSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES256&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA384&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;ECDHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ECDSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;GCM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA256&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;ECDHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ECDSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA256&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;ECDHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ECDSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES256&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;ECDHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ECDSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA&lt;/span&gt;

             &lt;span class=&quot;no&quot;&gt;ECDHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES256&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;GCM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA384&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;ECDHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES256&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA384&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;ECDHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;GCM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA256&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;ECDHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA256&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;ECDHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES256&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;ECDHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA&lt;/span&gt;

             &lt;span class=&quot;no&quot;&gt;ECDH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ECDSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES256&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;GCM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA384&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;ECDH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ECDSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES256&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA384&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;ECDH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ECDSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;GCM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA256&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;ECDH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ECDSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA256&lt;/span&gt;
             
             
             &lt;span class=&quot;no&quot;&gt;DHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES256&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;GCM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA384&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;DHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES256&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA256&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;DHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DSS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES256&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;GCM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA384&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;DHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DSS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES256&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA256&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;DHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES256&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;DHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DSS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES256&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA&lt;/span&gt;

             &lt;span class=&quot;no&quot;&gt;DHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DSS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;GCM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA256&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;DHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;GCM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA256&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;DHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA256&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;DHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DSS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA256&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;DHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RSA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;DHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DSS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA&lt;/span&gt;
             
             
             &lt;span class=&quot;no&quot;&gt;AES128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;GCM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA256&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;AES128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA&lt;/span&gt;
             &lt;span class=&quot;no&quot;&gt;DES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CBC3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA&lt;/span&gt;
           &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;ss&quot;&gt;secure_renegotiate:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;ss&quot;&gt;reuse_sessions:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;ss&quot;&gt;honor_cipher_order:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;ss&quot;&gt;client_renegotiation:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;ss&quot;&gt;eccs:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
             &lt;span class=&quot;ss&quot;&gt;:sect571r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:sect571k1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:secp521r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:brainpoolP512r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:sect409k1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;ss&quot;&gt;:sect409r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:brainpoolP384r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:secp384r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:sect283k1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:sect283r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;ss&quot;&gt;:brainpoolP256r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:secp256k1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:secp256r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:sect239k1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:sect233k1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;ss&quot;&gt;:sect233r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:secp224k1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:secp224r1&lt;/span&gt;
           &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
   &lt;span class=&quot;ss&quot;&gt;cache_static_manifest:&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;priv/static/cache_manifest.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;ss&quot;&gt;server:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;ss&quot;&gt;code_reloader:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;

 &lt;span class=&quot;c1&quot;&gt;# Do not print debug messages in production&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;level:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:info&lt;/span&gt;

 &lt;span class=&quot;c1&quot;&gt;# ## SSL Support&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# To get SSL working, you will need to add the `https` key&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# to the previous section and set your `:url` port to 443:&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#     config :fumigate, FumigateWeb.Endpoint,&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#       ...&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#       url: [host: &quot;example.com&quot;, port: 443],&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;#       https: [&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#         :inet6,&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#         port: 443,&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#         cipher_suite: :strong,&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#         keyfile: System.get_env(&quot;SOME_APP_SSL_KEY_PATH&quot;),&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#         certfile: System.get_env(&quot;SOME_APP_SSL_CERT_PATH&quot;)&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#       ]&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# The `cipher_suite` is set to `:strong` to support only the&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# latest and more secure SSL ciphers. This means old browsers&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# and clients may not be supported. You can set it to&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# `:compatible` for wider support.&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# `:keyfile` and `:certfile` expect an absolute path to the key&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# and cert in disk or a relative path inside priv, for example&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# &quot;priv/ssl/server.key&quot;. For all supported SSL configuration&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# options, see https://hexdocs.pm/plug/Plug.SSL.html#configure/1&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# We also recommend setting `force_ssl` in your endpoint, ensuring&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# no data is ever sent via http, always redirecting to https:&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# Check `Plug.SSL` for all available options in `force_ssl`.&lt;/span&gt;

 &lt;span class=&quot;c1&quot;&gt;# ## Using releases (distillery)&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# If you are doing OTP releases, you need to instruct Phoenix&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# to start the server for all endpoints:&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:phoenix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:serve_endpoints&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# Alternatively, you can configure exactly which server to&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# start per endpoint:&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#     config :fumigate, FumigateWeb.Endpoint, server: true&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# Note you can't rely on `System.get_env/1` when using releases.&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# See the releases documentation accordingly.&lt;/span&gt;

 &lt;span class=&quot;c1&quot;&gt;# Finally import the config/prod.secret.exs which should be versioned&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# separately.&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;import_config&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;prod.secret.exs&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 16 Sep 2019 00:00:00 -0700</pubDate>
        <link>https://mythicalprogrammer.github.io/technology/webdev/elixir/phoenix/deployments/distillery/edeliver/2019/09/16/deploying-phoenix.html</link>
        <guid isPermaLink="true">https://mythicalprogrammer.github.io/technology/webdev/elixir/phoenix/deployments/distillery/edeliver/2019/09/16/deploying-phoenix.html</guid>
        
        
        <category>technology</category>
        
        <category>webdev</category>
        
        <category>elixir</category>
        
        <category>phoenix</category>
        
        <category>deployments</category>
        
        <category>distillery</category>
        
        <category>edeliver</category>
        
      </item>
    
      <item>
        <title>Books I've read this week and future reading plans.</title>
        <description>&lt;p align=&quot;center&quot;&gt;
    &lt;img title=&quot;Door surrounds by a wall made out of books.&quot; width=&quot;100%&quot; src=&quot;/static/img/posts/books-1655783_1280.jpg&quot; /&gt;
&lt;/p&gt;

&lt;h2 id=&quot;books-ive-read-this-week&quot;&gt;Books I’ve read this week&lt;/h2&gt;

&lt;p&gt;So I’m reading up my tech stack I’ve chosen for the next five years for my start up.
Mostly setting up my dev machine and foundation toolings.&lt;/p&gt;

&lt;h4 id=&quot;absolute-openbsd-unix-for-the-practical-paranoid-2nd-edition-by-michael-w-lucashttpsnostarchcomobenbsd2e&quot;&gt;&lt;a href=&quot;https://nostarch.com/obenbsd2e&quot;&gt;Absolute OpenBSD Unix for the Practical Paranoid (2nd Edition) by Michael W. Lucas&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The partition harddrive during installing of this book is outdated.&lt;/p&gt;

&lt;p&gt;Tutorial I’ve used is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://sohcahtoa.org.uk/openbsd.html&quot;&gt;https://sohcahtoa.org.uk/openbsd.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.c0ffee.net/blog/openbsd-on-a-laptop/&quot;&gt;https://www.c0ffee.net/blog/openbsd-on-a-laptop/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I’ve installed xfce window manager desktop whatever and there were some hiccup. Especially having to figure out to enable an option for xfce terminal to run as shell login user (why is this not default?).&lt;/p&gt;

&lt;p&gt;I’ve also set up ksh terminal using &lt;a href=&quot;https://github.com/agkozak/polyglot&quot;&gt;polyglot github&lt;/a&gt; configuration. It works for me.&lt;/p&gt;

&lt;h4 id=&quot;tmux-2-productive-mouse-free-development-by-brian-p-hoganhttpspragprogcombookbhtmux2tmux-2&quot;&gt;&lt;a href=&quot;https://pragprog.com/book/bhtmux2/tmux-2&quot;&gt;tmux 2 Productive Mouse-Free Development by Brian P. Hogan&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;I’ve read this book a few years ago and it’s the reason why I am good at tmux. I learned about tmux at a Ruby on Rail talk 10 years ago.&lt;/p&gt;

&lt;p&gt;I’m using this &lt;a href=&quot;https://github.com/gpakosz/.tmux&quot;&gt;config file&lt;/a&gt; with a few tweaks. 
The pane split short cut for both horizontal and vertical are the same &amp;gt;___&amp;gt;.
Also copy mode doesn’t use vi key even though pane navigation uses vi keys.&lt;/p&gt;

&lt;p&gt;I couldn’t get the font working on OpenBSD and am still working on it. It’s in the backburner.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;img title=&quot;Opened book with story coming alives on the pages.&quot; width=&quot;100%&quot; src=&quot;/static/img/posts/narrative-794978_1920.jpg&quot; /&gt;
&lt;/p&gt;

&lt;h2 id=&quot;what-am-i-reading-next&quot;&gt;What am I reading next&lt;/h2&gt;

&lt;p&gt;In the technology queue there are two books.&lt;/p&gt;

&lt;p&gt;I would like the latest Vim book. I’ve read the practical vim book and currently want to 
read up on neo vim and the latest book by the same author iirc. 
&lt;a href=&quot;https://pragprog.com/book/modvim/modern-vim&quot;&gt;https://pragprog.com/book/modvim/modern-vim&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The vim one will be handy since R studio is not a port in OpenBSD and the dependancies is pretty bad to make it port.&lt;/p&gt;

&lt;p&gt;I’ve found this sweeet article from my alma mata for vim+tmux R dev:
&lt;a href=&quot;https://hpcc.ucr.edu/manuals_linux-cluster_terminalIDE.html&quot;&gt;https://hpcc.ucr.edu/manuals_linux-cluster_terminalIDE.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also forgot about this one:
&lt;a href=&quot;https://kadekillary.work/post/nvim-r/&quot;&gt;https://kadekillary.work/post/nvim-r/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also a sweet website for top vim plugins:
&lt;a href=&quot;https://vimawesome.com/&quot;&gt;vim awesome&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another one I would like to read is a postgresql book. 
I’ll start with the book below and see how it goes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.packtpub.com/big-data-and-business-intelligence/learning-postgresql-10-second-edition&quot;&gt;Learning PostgreSQL 10 - Second Edition by Andrey Volkov and Salahaldin Juba&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There’s also a pretty interesting one in depth: &lt;a href=&quot;https://use-the-index-luke.com/&quot;&gt;Use the Index Luke&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From there I have an elixir book to read and a phoenix book but that’s for later.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;img title=&quot;Girl sitting and leaning against a tree reading a book on an island with sun setting over the horizon.&quot; height=&quot;50%&quot; width=&quot;100%&quot; src=&quot;/static/img/posts/sunset-485016_1920.png&quot; /&gt;
&lt;/p&gt;

&lt;h3 id=&quot;random-thoughts-on-publishers&quot;&gt;Random thoughts on publishers&lt;/h3&gt;

&lt;p&gt;It seems like I’m moving away from manning and have been reading a lot of Pragmatic Programmers and No Stach publisher.&lt;/p&gt;

&lt;p&gt;Packt is really a hit or miss.&lt;/p&gt;

&lt;h3 id=&quot;what-about-books-in-other-subject&quot;&gt;What about books in other subject?&lt;/h3&gt;

&lt;p&gt;I’m reading a few self help books, which is personal, so I won’t be putting it here. 
Just trying to be my best self that’s all.&lt;/p&gt;

&lt;p&gt;As for statistic, I’ve found a new spatial modeling book that was recently released:
&lt;a href=&quot;https://geocompr.robinlovelace.net/&quot;&gt;Geocomputation with R by Robin Lovelace, Jakub Nowosad, Jannes Muenchow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I dislike the title name because it sounds funky to be honest I’m hoping it spatial analysis which 
from the summary it is. Maybe geocomputation is some domain specific terminology I don’t know
and I’m just being silly.&lt;/p&gt;

&lt;p&gt;Feel free to hit me up on &lt;a href=&quot;https://twitter.com/AnthonyDoan20&quot;&gt;twitter&lt;/a&gt;, &lt;a href=&quot;https://mastodon.social/@anthony_doan&quot;&gt;mastodon&lt;/a&gt;, and whatever if you guys have any suggestions on books either technical
or self help or statistical modeling.&lt;/p&gt;

&lt;p&gt;Have a wonderful week.&lt;/p&gt;

&lt;h3 id=&quot;credits&quot;&gt;Credits&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;First picture: &lt;a href=&quot;https://pixabay.com/en/books-door-entrance-culture-1655783/&quot;&gt;https://pixabay.com/en/books-door-entrance-culture-1655783/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Second picture: &lt;a href=&quot;https://pixabay.com/en/narrative-history-dream-tell-794978/&quot;&gt;https://pixabay.com/en/narrative-history-dream-tell-794978/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Third picture: &lt;a href=&quot;https://pixabay.com/en/sunset-island-mar-dusk-brain-485016/&quot;&gt;https://pixabay.com/en/sunset-island-mar-dusk-brain-485016/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 16 Dec 2018 18:58:05 -0800</pubDate>
        <link>https://mythicalprogrammer.github.io/modeling/statistic/datascience/machinelearning/technology/webdev/2018/12/16/reading-progress.html</link>
        <guid isPermaLink="true">https://mythicalprogrammer.github.io/modeling/statistic/datascience/machinelearning/technology/webdev/2018/12/16/reading-progress.html</guid>
        
        
        <category>modeling</category>
        
        <category>statistic</category>
        
        <category>datascience</category>
        
        <category>machinelearning</category>
        
        <category>technology</category>
        
        <category>webdev</category>
        
      </item>
    
      <item>
        <title>Interesting Papers I've read this week.</title>
        <description>&lt;p align=&quot;center&quot;&gt;
    &lt;img title=&quot;Book with magnifying glass.&quot; width=&quot;60%&quot; src=&quot;/static/img/posts/book-2304078_1920.jpg&quot; /&gt;
&lt;/p&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;This week I had to study for a job interview at a pretty sweet place. So in preparation for it I’ve read up
on statistics that I’ve listed on my resume. I’ve came across a few good papers and I’m just happy to 
have read it. Just wanted to post it here in case if I ever need a refresher on Bayesian.&lt;/p&gt;

&lt;h3 id=&quot;basic-master-level-statistic&quot;&gt;Basic Master Level Statistic&lt;/h3&gt;

&lt;p&gt;Introductory Mathematical Statistics Methods of Estimation and Properties of Point Estimators: Fundamental Exercises with Solutions by Dr. Olga Korosteleva&lt;/p&gt;

&lt;p&gt;This is written by my professor and it was in a neat package of overview of what I’ve learned in my master program.
It is a good refresher. There were some notes I’ve written for clarifications:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MLE - This selects the parameter values that make the data most probable&lt;/li&gt;
  &lt;li&gt;Likelihood (frequentist point of view) - is a function of the parameters of a statistical model, 
given specific observed data.&lt;/li&gt;
  &lt;li&gt;Method of Moments Estimators (MOM) &amp;amp; MLE are two estimator methods to do point estimation for parameter.
This is the frequentist point of view on estimating parameters which are fixed. Where as Bayesian model
parameter as a random variable and not a fixed point.&lt;/li&gt;
  &lt;li&gt;Fisher information - is a way of measuring the amount of information that an observable random variable X carries about an unknown parameter theta of a distribution models X.&lt;/li&gt;
  &lt;li&gt;Cramer-Rao Lower Bound - expresses a lower-bound on the variance of unbiased estimators of a deterministic parameter. An unbiased estimator which achieves this lower bound is efficient.&lt;/li&gt;
  &lt;li&gt;Sufficient Statistic - a statistic that summarize all of the information in a sample about the desired parameter. (Penn State have more clarification on this).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bayesian-review&quot;&gt;Bayesian Review&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://arxiv.org/abs/1001.4656&quot;&gt;On Bayesian Data Analysis by Christian P. Robert and Judith Rousseau (August 27, 2018)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Point estimation parameter vs parameter with distribution. 
Credible Interval vs Confidence Interval.
Critiques of Bayesian and solutions.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;An Introduction to Bayesian Statistics Without Using Equations by Tomoharu Eguchi (2008)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Great visualization take on how to explain Bayesian Statistic.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://arxiv.org/abs/1106.2697&quot;&gt;A tutorial on Bayesian nonparametric models by Samuel J. Gershman and David M. Blei (2012)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A review what I used during my time at the FDA.&lt;/p&gt;

&lt;h3 id=&quot;credits&quot;&gt;Credits&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;First picture: &lt;a href=&quot;https://pixabay.com/en/book-magnifying-glass-glass-2304078/&quot;&gt;https://pixabay.com/en/book-magnifying-glass-glass-2304078/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 13 Dec 2018 18:33:00 -0800</pubDate>
        <link>https://mythicalprogrammer.github.io/modeling/statistic/datascience/machinelearning/bayesian/2018/12/13/interesting-papers-i-have-read-this-week.html</link>
        <guid isPermaLink="true">https://mythicalprogrammer.github.io/modeling/statistic/datascience/machinelearning/bayesian/2018/12/13/interesting-papers-i-have-read-this-week.html</guid>
        
        
        <category>modeling</category>
        
        <category>statistic</category>
        
        <category>datascience</category>
        
        <category>machinelearning</category>
        
        <category>bayesian</category>
        
      </item>
    
      <item>
        <title>Things I've learned about modeling. (DRAFT, temp title)</title>
        <description>&lt;p align=&quot;center&quot;&gt;
    &lt;img title=&quot;A random guy studying picture.&quot; width=&quot;60%&quot; src=&quot;/static/img/posts/person-984236_1920.jpg&quot; /&gt;
&lt;/p&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;I’ve been creating models for a while now.&lt;/p&gt;

&lt;p&gt;Recently read a statistical modeling book on survival analysis and 
I learned something new. Something that is thought provoking
toward modeling.&lt;/p&gt;

&lt;p&gt;I just wanted to put my thoughts on here and see figure out where I’m
going with this post when I get there.&lt;/p&gt;

&lt;h3 id=&quot;hypothesis-response-type-and-data-type&quot;&gt;Hypothesis, Response type, and Data type&lt;/h3&gt;

&lt;p&gt;I recently have a growth or a better understanding between distinction of
research and given data.&lt;/p&gt;

&lt;p&gt;In the past I believe the data type is what play a role in the class and type of model you can do.
Examples of type of model are longitudinal, survival, time series, etc…&lt;/p&gt;

&lt;p&gt;I know as a researcher you have to have a hypothesis first before conducting your experiment and choose
your test statistic.
If you don’t then you risk introducing bias.&lt;/p&gt;

&lt;p&gt;But reading a recent book, I’ve come to realize that the hypothesis is the most important thing that
dictate your model and the type of data you have at hand is a close second.&lt;/p&gt;

&lt;p&gt;What the type of your response in your model dictate your modeling class (longitudinal, survival, etc..).
From there you have to make sure your data can address your hypothesis which is tie to 
the type of your response.&lt;/p&gt;

&lt;p&gt;Again the hypothesis play a important role to modeling. 
It then dictate the response type which will dictate what type of data you should have.
Then, the data type will dictate what model can you can do.&lt;/p&gt;

&lt;p&gt;But real life isn’t like this.&lt;/p&gt;

&lt;p&gt;The majority of data science and machine learning,
you have data already.
You cannot conduct experiment to generate data yourself because
you are given data and expect to work on it.
So you essentially skip several step and go straight to
what type of data I have at hand and what class of model
can I use. If you have a hypothesis it can help but 
if you have the wrong type of data you cannot answer it.&lt;/p&gt;

&lt;p&gt;Before I give an example,
I want to say most people actually get the data and throw it in a black box algorithm
and see what’s going on.
Another group of people will look at the data type and see what type
of model you can apply.
These two cases are mostly for when
you are given data and the observations are done already.&lt;/p&gt;

&lt;p&gt;When you do research, you get to dictate what you’re looking via hypothesis. 
Then you get to design the experiment with the type of data you need in mind. 
Finally the classes of algorithm you can apply is base on your hypothesis and data type.&lt;/p&gt;

&lt;p&gt;Between the given data and conducting research to get data,
I am incline to believe the latter have less chances of bias.&lt;/p&gt;

&lt;h3 id=&quot;example&quot;&gt;Example&lt;/h3&gt;

&lt;p&gt;TODO.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;First picture: &lt;a href=&quot;https://pixabay.com/en/person-reading-studyin-bed-books-984236/&quot;&gt;https://pixabay.com/en/person-reading-studyin-bed-books-984236/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 29 Nov 2018 20:08:00 -0800</pubDate>
        <link>https://mythicalprogrammer.github.io/modeling/statistic/datascience/machinelearning/2018/11/29/things-I-have-learned-about-modeling.html</link>
        <guid isPermaLink="true">https://mythicalprogrammer.github.io/modeling/statistic/datascience/machinelearning/2018/11/29/things-I-have-learned-about-modeling.html</guid>
        
        
        <category>modeling</category>
        
        <category>statistic</category>
        
        <category>datascience</category>
        
        <category>machinelearning</category>
        
      </item>
    
      <item>
        <title>The Case for Boring Technology</title>
        <description>&lt;p align=&quot;center&quot;&gt;
    &lt;img title=&quot;A funny bored picture.&quot; width=&quot;60%&quot; src=&quot;/static/img/posts/bored-3082828_1920.jpg&quot; /&gt;
&lt;/p&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;I recently talked to a buddy of mine and we had different view on technology. Being a veteran in the whole gamut full stack of web development I have a set of belief that I’ve come to developed toward technology stack. I didn’t fully express my view when talking to him and I’d like to put it down in words next time I have to discuss such topic.&lt;/p&gt;

&lt;p&gt;This is also for me to have a clear, rational, and logical argument written down.&lt;/p&gt;

&lt;h3 id=&quot;keeping-up-to-date&quot;&gt;Keeping Up To Date&lt;/h3&gt;

&lt;p&gt;Technology is always changing. There is a new frontend rendering every few months. 
The people on the otherside will say, “It is up to you to learn and keep up to date.”
I used to believe this until the realized this:&lt;/p&gt;

&lt;p&gt;It sounds great but the fact is when your whole stack change often enough especially when you are a full stack this become a full time job.&lt;/p&gt;

&lt;p&gt;Frontend rendering rate of change is really really fast. That’s great if you don’t have no life, no ambition for relationship or family, etc…&lt;/p&gt;

&lt;p&gt;The pro to frontend rendering is that we have tons of awesome stuff created by javascript community and I would argue that web component standardization was because of the cuttroat nature of flavor flav of the month frontend rendering javascript.&lt;/p&gt;

&lt;p&gt;I am done with this rat race.&lt;/p&gt;

&lt;p&gt;Reason being I have other personal stuff to work on. 
My goals have changed from making tools for other people, to making tools for me and hoping that other people will find it useful. 
I’m doing side projects for myself. 
I get to choose what I feel like reasonable regardless if it’s wrong or not. I’ll learn from my mistakes.&lt;/p&gt;

&lt;p&gt;I am in the current mind set of learning something good and well enough that will survive in at least 2+ years from now.&lt;/p&gt;

&lt;p&gt;Keeping up to date is always something you hear but it’s importance does not overshadow having a reliable technology.&lt;/p&gt;

&lt;h3 id=&quot;lets-start-with-database-sql-vs-nosql&quot;&gt;Let’s start with Database SQL vs NoSQL&lt;/h3&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;img title=&quot;OpenBSD banner.&quot; src=&quot;/static/img/posts/PostgreSQL_logo.3colors.120x120.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;One statement I made with my buddy is that I’m going to relearn and sharpen my relational database skillset and I’ve chosen PostgreSQL. 
I’ve been using the ORM libaries of MVC frameworks which abstract from the relation database. 
This is great but I want to be better and more focus on a piece of technology that I believe in. 
Plus I’m hoping to learn PostGIS in the future for temporal spatial analysis.&lt;/p&gt;

&lt;p&gt;He wanted me to use Firebase instead of PostgreSQL.&lt;/p&gt;

&lt;p&gt;I don’t want to do this.&lt;/p&gt;

&lt;p&gt;One of the biggest reason is that I want to keep my data safe and I want to be in control of my data. 
The application logic is not the end goal. 
The real gold, pun intended, is the data. 
It takes awhile to become an authorative site and developed an active community. The data is what makes this possible.
Do not give your data to third party that’s silly.&lt;/p&gt;

&lt;p&gt;Another reason is that relational database will be here in 10 years from now. I don’t know about anything else but you can try to guess and bet on it. 
I won’t be taking that bet or joining that rat race.&lt;/p&gt;

&lt;p&gt;I learned and did professionally Cassandra and MongoDB. I don’t know when and where it’ll be in a decade from now. 
I don’t believe it is a use case for the majority of the data out there, at least the data I care about. 
I’m not going to write joins manually. How well does my knowledge of column based database structure transferable to other databases? I think SQL is much more transferable than CQL.&lt;/p&gt;

&lt;p&gt;When you find yourself doing relational joins and doing nothing with text search in Elasticsearch, Solr, or any Lucene-based database then you’re doing it wrong.&lt;/p&gt;

&lt;p&gt;I can go into B+ trees vs trie but I get paid for that when I did consulting and it’s a huge discussion in itself.&lt;/p&gt;

&lt;p&gt;It should be the responsibility of the programmer to do a pro and con. 
Often time than not, those programmers are chasing hype and money. That is fine. 
I don’t want to be the person getting stuck maintaining such choices when it goes out of vogue. 
Inheriting technical debt is not fun and if I have the choice then I choose no. 
Go out there and test those fancy new technology. 
I’ll wait until they are battle tested, I’ll wait until it’s boring like Ruby on Rails is now.&lt;/p&gt;

&lt;p&gt;The majority of the data out there are relational. 
Use a relational database and if you want to gamble try one of the graph database.
Also the big data hype is dying down. 
The majority of the data out there are not big. You don’t need fancy convoluted tech stacks for your small data. 
If you want to juggle and maintain convoluted tech stacks all day then sure.&lt;/p&gt;

&lt;h3 id=&quot;back-to-frontend-rendering-javascript-framework&quot;&gt;Back to Frontend Rendering Javascript Framework&lt;/h3&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;img title=&quot;OpenBSD banner.&quot; src=&quot;/static/img/posts/phoenix_elixir.jpg&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Another technology that keeps on changing is frontend rendering javascript frameworks. 
I am basically done with this, I went from ember.js, angular.js, and now to Vue.js. 
I’ll come back when it’s boring. I’ll come back when there are clear winners.&lt;/p&gt;

&lt;p&gt;I’ve highlight the reasons above. Other reason such as the sketchy security issue of npm packages. 
Or SEO for frontend rendering sucks, it is a bunch of hacks. 
Supposely Google got something that can handle crawling that. 
No thanks, I don’t need more headaches. SSR for me.&lt;/p&gt;

&lt;p&gt;I’ve chosen a server side/backend rendering MVC framework, Phoenix and Elixir programming language and call it a day. 
It’s a small community, the changes aren’t often, and more importantly it’s boring. I am pretty sure it’ll be here at least 2 years from now.
It is a bet on my part on this technology but SSR aren’t changing as fast as FSR.&lt;/p&gt;

&lt;p&gt;I also dislike the Node.JS concurrecy model. I prefer Erlang’s actor model. 
It’s easier to think and debug. I don’t have to do hand threads myself or catch possible error cases.
I can just let it crash and only catch cases that I want in Erlang.&lt;/p&gt;

&lt;h3 id=&quot;os&quot;&gt;OS&lt;/h3&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;img title=&quot;OpenBSD banner.&quot; src=&quot;/static/img/posts/openbsd_banner1.gif&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;As for OS, I’m going for OpenBSD. I want to master an OS and I find that linux is increasingly complicated.&lt;/p&gt;

&lt;p&gt;Which is fine but I want to know the in’s and out’s of my OS and OpenBSD is boring enough for me.
It is small enough for me to figure out all the processes and what the hell is going on.I can tailor it to my developing machine without unnecessary bloat and blobs (heh). 
OpenBSD also have all the programming languages support I care about (Elixir, NPM,Python, R).
I wish it have a better filesystem but I know it’ll work years from now. I’ll wait for Hammer2 and dream about a port over to OpenBSD one day.&lt;/p&gt;

&lt;p&gt;I have stopped doing rat races and refocus on what I care about and this is my new technology stack for my side projects:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;OpenBSD&lt;/li&gt;
  &lt;li&gt;PostgreSQL&lt;/li&gt;
  &lt;li&gt;Phoenix + Elixir&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is my rationality and hopefully there is some wisdom in these.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
    &lt;img title=&quot;A another funny bored picture. I personally think it's more of a duck face than a bored face.&quot; width=&quot;60%&quot; src=&quot;/static/img/posts/grimace-1012862_1280.jpg&quot; /&gt;
&lt;/p&gt;

&lt;h3 id=&quot;etc&quot;&gt;Etc…&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;First picture: &lt;a href=&quot;/https://pixabay.com/en/users/RobinHiggins-1321953/&quot;&gt;https://pixabay.com/en/users/RobinHiggins-1321953&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Last picture: &lt;a href=&quot;https://pixabay.com/en/grimace-girl-teen-mimicry-brutal-1012862/&quot;&gt;https://pixabay.com/en/grimace-girl-teen-mimicry-brutal-1012862/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 26 Nov 2018 16:44:00 -0800</pubDate>
        <link>https://mythicalprogrammer.github.io/technology/webdev/openbsd/2018/11/26/the_case_for_boring_technology.html</link>
        <guid isPermaLink="true">https://mythicalprogrammer.github.io/technology/webdev/openbsd/2018/11/26/the_case_for_boring_technology.html</guid>
        
        
        <category>technology</category>
        
        <category>webdev</category>
        
        <category>openbsd</category>
        
      </item>
    
      <item>
        <title>Linear Mixed Effects Models for CD4+ Cell Counts in Men with HIV</title>
        <description>&lt;p align=&quot;center&quot;&gt;
    &lt;img title=&quot;Freddie Mercury Memorial Statue&quot; width=&quot;60%&quot; src=&quot;/static/img/posts/freddie-mercury-memorial-779956_640.jpg&quot; /&gt;
&lt;/p&gt;

&lt;h3 id=&quot;update&quot;&gt;Update&lt;/h3&gt;

&lt;p&gt;Busy moving. I have a summer project for this blog (look forward to it, it’ll be fun). I also a summer internship at JPL NASA!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You can get the &lt;a href=&quot;/static/papers/linear-mixed-effects.pdf&quot;&gt;pdf paper here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I just finished my semester and I did a final project that I’m pretty proud of. I put in a lot of effort and my professor Dr. Zhou was very awesome.&lt;/p&gt;

&lt;h3 id=&quot;abstract&quot;&gt;Abstract&lt;/h3&gt;

&lt;p&gt;Human immunodeficiency virus or HIV are responsible for decline in CD4+ cell count. The investigation is set out to find the population rate of CD4+ cell count decline per milliliter of blood, to characterize the of individual rate of cell decline, and the factors that predict cell decline. Using exploratory data analysis and longitudinal tools, a linear mixed effects model with random intercept and random slope was created. The estimated population average time course of CD4+ cell depletion is 80.1857 CD4+ cells per milliliter of blood. The degree of heterogeneity across men in the rate of progression as time passes is 54.8061127978 cell count. The factors that predict cell count decline is time, pack of smoke, number of sexual partners, cesd mental illness score, age &amp;amp; time interaction, and smoke &amp;amp; time. The time factor is the most dramatic in term of CD4+ cell depletion.&lt;/p&gt;

&lt;h3 id=&quot;introduction&quot;&gt;1 Introduction&lt;/h3&gt;

&lt;h4 id=&quot;hiv-and-cd4-cells&quot;&gt;1.1 HIV and CD4+ Cells&lt;/h4&gt;

&lt;p&gt;Human immunodeficiency virus or HIV is a virus that attack immune system by killing a class of immune cell named CD4+ cell. On average a normal person without HIV have 1000 cells per milliliter of blood. As time passes from the initial HIV infection an infected person CD4+ cell counts starts to decline. Acquired immune deficiency syndrome or AIDS is the disease caused by the HIV virus.&lt;/p&gt;

&lt;h4 id=&quot;the-data&quot;&gt;1.2 The Data&lt;/h4&gt;

&lt;p&gt;The data used in this paper is a subset of the Multicenter AIDS Cohort Study with 369 men with HIV. The data consist of columns representing: time since seroconversion, CD4 count, age (relative to arbitrary origin), packs of cigarettes smoked per day, recreational drug use (yes/no), number of sexual partners, CESD (mental illness score), and subject ID. The data have been standardized, the measurements are unbalance, and the time interval are not evenly spaced.&lt;/p&gt;

&lt;h4 id=&quot;aim-of-the-investigation&quot;&gt;1.3 Aim of the Investigation&lt;/h4&gt;

&lt;p&gt;The aim of the investigation is four main points: average time course of CD4+ cell depletion, time course for individual men, to characterize the degree of heterogeneity across men in the rate of progression, and factors which predict CD4+ cell changes.&lt;/p&gt;

&lt;h3 id=&quot;methods&quot;&gt;2 Methods&lt;/h3&gt;

&lt;h4 id=&quot;exploratory-data-analysis&quot;&gt;2.1 Exploratory Data Analysis&lt;/h4&gt;

&lt;p&gt;The goal in exploratory data analysis (EDA) is to have an idea what the CD4+ cell count data looks like and ideas to go from EDA to modeling the data. Creating a response trend model will give an idea how time affect the response and if polynomial time is needed. A variogram graph will indicate what kind of variance is needed to be account for in the model. There are three different kind of variance either random effect variance, within-subject variance, and between-subject variance are needed.&lt;/p&gt;

&lt;h4 id=&quot;modeling-longitudinal-data&quot;&gt;2.2 Modeling Longitudinal Data&lt;/h4&gt;

&lt;p&gt;The next step is to create a suitable longitudinal model for the CD4+ cell data to answer the aim of this investigation. The model that will be chosen will have to address the variances that was shown in the variogram during EDA. After the model is selected the next step will be predictor selection. The predictor selection will be base on the deviance test of the full and the reduced model. Deviance test will be perform because the comparison are base on nested models.&lt;/p&gt;

&lt;h4 id=&quot;assumptions&quot;&gt;2.3 Assumptions&lt;/h4&gt;

&lt;p&gt;The assumptions this investigation made is there are between-subject variations, within-subject variations, and measurement variations that need to be explicitly accounted for. The chosen longitudinal model will account for these explicitly so that the investigation can have an accurate and precise answers to the aim of this investigation.&lt;/p&gt;

&lt;p&gt;Between-subject is latent factors. Latent factors are biological variability examples are diet, genetics, and other latent factors. Latent factors can keep an individuals CD4+ cell count consistently higher than the population mean or lower than the population mean.&lt;/p&gt;

&lt;p&gt;The within-subject variation is serial correlation. The serial correlation is induced by time, the close two measurements are the more correlated they are. The farther apart two measurements are the less correlated they are.&lt;/p&gt;

&lt;p&gt;Measurement variation takes into account for the process of taking measurements is an imperfect process and that there will be some variation in taking CD4+ cell count measurement. A variogram with force equally spacing of time intervals will confirm these assumptions of variations exist in the CD4+ cell count data.&lt;/p&gt;

&lt;h3 id=&quot;results&quot;&gt;3 Results&lt;/h3&gt;

&lt;h4 id=&quot;exploratory-data-analysis-results&quot;&gt;3.1 Exploratory Data Analysis Results&lt;/h4&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;img title=&quot;CD4+ Cells Spaghetti Plot&quot; width=&quot;80%&quot; src=&quot;/static/img/posts/1_cd4.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Figure 1: A graph between the response of the CD4+ cell count on the y-axis and the time points on the x-axis.&lt;/p&gt;

&lt;p&gt;The spaghetti plot, Figure 1, shows that the data is unbalanced and that the time intervals are irregular and unequaled. It also show that individual have different base line which imply random intercept and that individual have different rate of progression which imply random slope. This will help in model selection especially when certain covariance structure have assumption about balance data and equally spaced time intervals.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;img title=&quot;CD4+ Cells Population Trend Plot&quot; width=&quot;80%&quot; src=&quot;/static/img/posts/2_cd4.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Figure 2: A graph between the response of the CD4+ cell count on the y-axis and the time points on the x-axis.&lt;/p&gt;

&lt;p&gt;The response trend graph, Figure 2, indicate that perhaps time is not constant but some sort of polynomial. Between time point 0 and 2 months there is a sharp drop in CD4+ cell count and closer to the 2 month time point the CD4+ cell count rate of decline starts to steady out and the sharp decrease rate is slowed down drastically. Modeling the data with quadratic or cubic time predictor may be needed base on this graph.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;img title=&quot;CD4+ Variogram&quot; width=&quot;80%&quot; src=&quot;/static/img/posts/3_cd4.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Figure 3: A variogram of the CD4+ cell count data with time intervals forced to be equally space.&lt;/p&gt;

&lt;p&gt;Next is a plotted variogram (Figure 3) to check the assumption of having three sources of variation. Due to the data having unequaled time intervals the measurements are averaged and binned to the nearest time point. The blue line represent that variogram line and the grey horizontal line represents total variance.&lt;/p&gt;

&lt;p&gt;Looking at Figure 3, the variogram blue solid line does not start at zero it indicate that there
exist measurement errors. The variogram is not a flat blue line but a slanted line with a slope indicating that there exist serial correlation. Finally the blue line does not touched the upper limit of total variance indicating that there is random effect in play. The assumption that the CD4+ cell count data have all three sources of variation can be safely assume and is verified empirically.&lt;/p&gt;

&lt;h4 id=&quot;model-selection-and-rejected-models&quot;&gt;3.2 Model Selection and Rejected Models&lt;/h4&gt;

&lt;p&gt;Longitudinal analysis have many linear models that to choose from. Models such as unstructured covariance and structured covariance. This section will discuss the reason for not choosing certain models.&lt;/p&gt;

&lt;p&gt;Unstructured covariance is ruled out for two reasons. The first reason being that the large data set and large number of predictors would result in a large amount of parameter estimations. The second reason is that unstructured covariance is unsuitable for data set that have measurement taken at unequally spaced intervals.&lt;/p&gt;

&lt;p&gt;Toeplitz covariance structure and autoregressive covariance structure both are other choices of structured covariance model. Both toeplitz and autoregressive assume that measurements are made at equal intervals of time. The CD4+ cell data have irregular unequal intervals of time.&lt;/p&gt;

&lt;p&gt;The variogram shows there are three sources of variation. Independent model is rejected because the model assume there is only measurement error. Uniform model is also rejected because it only address two sources of variation, measurement error and between-individual variation. Exponential covariance model is rejected because the model address only within-individual variation.&lt;/p&gt;

&lt;p&gt;Linear mixed effects models is chosen is because the model addresses all three sources of variation. The model explicitly distinguished between fixed and random effects. The advantage of this explicit distinction enable accurate and precise answers to the aim of this investigation.&lt;/p&gt;

&lt;h4 id=&quot;predictor-selection&quot;&gt;3.3 Predictor Selection&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Predictors    &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;    β_hat values   &lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;      p-values for t-test&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;intercept&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;790.11&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&amp;lt;.0001&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;time&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-81.6092&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&amp;lt;.0001&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;age&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.6277&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.3790&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;smoke&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;41.0459&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&amp;lt;.0001&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;drug&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;22.6537&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.2677&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;partners&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6.5509&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.0043&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;cesd&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-2.3499&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.0070&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;age × time&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-1.3805&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.0317&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;smoke × time&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-14.2323&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&amp;lt;.0001&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;drug × time&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-1.7315&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.8488&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;partners × time&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-0.3958&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.7161&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;cesd × time&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.1585&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.6899&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;time^2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.8753&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.6187&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Table 1: Full linear mixed effects model estimate.&lt;/p&gt;

&lt;p&gt;After choosing the linear fixed effects model with random intercept and random slope to model the data, the next part is selecting a good combination of predictors that describe the CD4+ cell count data. A full model is fitted first. From Table 1, which show the estimated β, predictors that are not significant at p-value of 0.05 will be dropped and the predictors that are significant will be kept as a reduced model. Note the time^2 was included in the full model because of the nonlinear trend of time that was indicated in the response trend graph.&lt;/p&gt;

&lt;p&gt;The predictors that are dropped are drug, drug × time, partners × time, cesd × time, and time^2. Even though the age predictor is not significant the interaction age × time is significant therefore the age predictor is kept in the reduced model.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;   &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;    Full Model   &lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;      Reduced Model&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;intercept&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;790.11&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&amp;lt;.0001&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;-2 Log Likelihood&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;33603.4&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;33600.9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;χ2 Test&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.5&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2.5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Statistic Degree of Freedom&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;13&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;χ2 25,0.95&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;11.070&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;11.070&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Table 2: Likelihood Ratio test for two linear mixed effect models.&lt;/p&gt;

&lt;p&gt;Hypothesis H1: Reduced Linear Mixed Effects Model 
Hypothesis H2: Full Linear Mixed Effects Model&lt;/p&gt;

&lt;p&gt;After fitting the reduced model, a likelihood ratio test was conducted between the full model and the reduced model. Table 2 shows the χ2 test statistic at 2.5 which is the difference between the -2 Log Likelihood of full model and reduced model. The degree of freedom for χ2 is the difference between the number of parameters in the full model and the number of parameters in the reduced model which is 5. The null hypothesis for the deviance test is the reduced model and the alternative hypothesis is the full model. Since the test statistic is 2.5 which is much less than 11.070, the
reduced model is chosen.&lt;/p&gt;

&lt;h4 id=&quot;final-model&quot;&gt;3.4 Final Model&lt;/h4&gt;

&lt;p&gt;The equation listed below is the selected model that best represent the CD4+ cell count data and the best explanation of the data. With this model, the investigation can proceed to answer the aim of the investigation.&lt;/p&gt;

&lt;p&gt;Yij = β0 + β1 timeij + β2 ageij + β3 smokeij + β4 partnersij + β5 cesdij + β6 ageij × timeij + β7 smokeij × timeij + b0i + b1i × timeij + eij&lt;/p&gt;

&lt;p&gt;=791.05 − 80.1857timeij + 1.4697ageij + 38.0785smokeij + 7.0434partnersij − 2.2867 cesdij − 1.3400 ageij × timeij − 13.2674 smokeij × timeij + b0i + b1i timeij + eij  (1)&lt;/p&gt;

&lt;p&gt;Where b0i represents the random intercept for each individual and b1i represents the random slope for each individual.&lt;/p&gt;

&lt;p&gt;The model can be rewritten in matrix notation&lt;/p&gt;

&lt;p&gt;Yi=Xiβ+Zibi +ei, i=1,…,N,j=1,…,ni (2)&lt;/p&gt;

&lt;p&gt;where Y i is a vector of size ni × 1 representing observations for ith individual, j represent the jth measurement for ith individual, Xi is a ni × p design matrix of p independent fixed effect variables, Zi is a ni × q design matrix of q independent random effect variables, β is a vector of size p × 1 representing fixed effect parameters, bi is an independent vector of q × 1 size representing random effects with MVN(0,G) distribution (Multivariate Normal), and ei represents an independent vector of random errors of size ni ×1 with MVN(0,Ri) distribution. The ei are independent of bi.&lt;/p&gt;

&lt;p&gt;The Ri represent within-subject variance. Linear fixed effects model break Ri down into two sources of within-subject variance, serial correlation and measurement error. The measurement error variance (τ^2) is equal to 59104. The serial correlation variance (σ^2) is 1.0649. The G matrix represents the between-subject variance.&lt;/p&gt;

&lt;p&gt;See paper for more matrix notations… &amp;gt;&lt;em&gt;__&lt;/em&gt;&amp;lt;&lt;/p&gt;

&lt;h3 id=&quot;etc&quot;&gt;Etc…&lt;/h3&gt;

&lt;p&gt;Please see paper for results, SAS codes, R codes, and conclusion. The blog post is getting long.&lt;/p&gt;

&lt;h3 id=&quot;post-mordem&quot;&gt;Post Mordem&lt;/h3&gt;

&lt;p&gt;Well… translating a paper into a blog post is terrible. The paper is too academic with high domain assumption and an abstract and a link to the paper is sufficient.&lt;/p&gt;

&lt;h4 id=&quot;etc-1&quot;&gt;Etc..&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://pixabay.com/en/freddie-mercury-memorial-statue-779956/&quot;&gt;The Freddie Mercury picture is taken from pixabay.&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 07 Jun 2018 07:15:00 -0700</pubDate>
        <link>https://mythicalprogrammer.github.io/analysis/longitudinal/biostatistic/statistic/2018/06/07/longitudinal_data_cd4_paper.html</link>
        <guid isPermaLink="true">https://mythicalprogrammer.github.io/analysis/longitudinal/biostatistic/statistic/2018/06/07/longitudinal_data_cd4_paper.html</guid>
        
        
        <category>analysis</category>
        
        <category>longitudinal</category>
        
        <category>biostatistic</category>
        
        <category>statistic</category>
        
      </item>
    
      <item>
        <title>Book Note: Introduction to Hierarchical Bayesian Modeling for Ecological Data, Chapter 1</title>
        <description>&lt;style type=&quot;text/css&quot;&gt;
#cy {
  height: 400px;
  width: 100%;
  left: 0;
  top: 0;
}
#cy2, #cy3, #cy4, #cy5, #cy6, #cy7, #cy8 {
  height: 70px;
  width: 100%;
  left: 0;
  top: 0;
}
#cy9, #cy10, #cy11, #cy12, #cy13 {
  height: 200px;
  width: 100%;
  left: 0;
  top: 0;
}
#cy14 {
  height: 300px;
  width: 100%;
  left: 0;
  top: 0;
}
#cy15 {
  height: 400px;
  width: 100%;
  left: 0;
  top: 0;
}
#cy16 {
  height: 500px;
  width: 100%;
  left: 0;
  top: 0;
}
&lt;/style&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/posts/salmon_sushi.jpg&quot; alt=&quot;salmon-sushi&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;So I’ve learned a little bit about Bayesian Hierarchical Modeling at FDA and decided to put down my thoughts and write about it more to reinforced what I’ve learned. I also want to try out some new javascript data visual libraries.&lt;/p&gt;

&lt;p&gt;A great book I’ve found is “Introduction to Hierarchical Bayesian Modeling for Ecological Data” by Parent and Rivot&lt;sup&gt;&lt;a href=&quot;#myfootnote1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;While at the FDA I code my own model without using any MCMC framework and it was very slow in R. I realize I need a MCMC framework under my toolbelt. After some &lt;a href=&quot;https://www.reddit.com/r/statistics/comments/5on87q/stan_vs_winbugs_a_search_for_informed_opinions/&quot;&gt;research&lt;/a&gt; I decided on &lt;a href=&quot;mc-stan.org&quot;&gt;Stan&lt;/a&gt; using the &lt;a href=&quot;http://mc-stan.org/users/interfaces/rstan&quot;&gt;rstan r package&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;the-graph-not-dag-not-a-bayesian-network&quot;&gt;The Graph (not DAG; not a Bayesian network)&lt;/h3&gt;

&lt;p&gt;Graph represents the salmon migration and birth cycle. Each edge represent a year pass. The nodes are square because they’re given. The information is given from previous knowledge.&lt;/p&gt;

&lt;div id=&quot;cy&quot;&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Variable&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Definition&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Wt&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Salmon Eggs&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0+&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Young-of-the-year (hatched)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PSm&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Pre-smolts&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sm1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smolt after 1 year&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sp1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Returns one year earlier than Sp2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Parr1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smaller juveniles left behind by Sm1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sm2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smolt after 2 year&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sp2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Returns one year after Sp1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;the-models---introducing-probability-into-the-graph&quot;&gt;The Models - Introducing Probability into the Graph&lt;/h3&gt;

&lt;p&gt;We’re going to take the graph that represent Salmon’s migration cycle and introduce uncertainty to it (model it via probability). 
By doing this we create a new graph that is complete different from the Salmon’s migration cycle graph. 
It is a graph base on probability view.&lt;/p&gt;

&lt;p&gt;We go through each square node and one by one apply a model and probability to it.&lt;/p&gt;

&lt;p&gt;Model is time base, &lt;em&gt;t&lt;/em&gt; will represent a particular year.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Sp&lt;sub&gt;t&lt;/sub&gt; = Sp1&lt;sub&gt;t&lt;/sub&gt; + Sp2&lt;sub&gt;t&lt;/sub&gt; = # of spawners at t-th year&lt;/li&gt;
  &lt;li&gt;W&lt;sub&gt;t&lt;/sub&gt; = # of eggs spawned by the adults returning in year t&lt;/li&gt;
  &lt;li&gt;0+&lt;sub&gt;t&lt;/sub&gt; = Young-of-the-year at t-th year&lt;/li&gt;
  &lt;li&gt;PSm&lt;sub&gt;t&lt;/sub&gt; = pre-smolts at t-th year&lt;/li&gt;
  &lt;li&gt;Sm1&lt;sub&gt;t&lt;/sub&gt; = 1+ smolts (1 year to smolt) at t-th year&lt;/li&gt;
  &lt;li&gt;P1&lt;sub&gt;t&lt;/sub&gt; = Parr1 = smaller juveniles left behind by Sm1 at t-th year&lt;/li&gt;
  &lt;li&gt;Sm2&lt;sub&gt;t&lt;/sub&gt; = 2+ smolts (2 years to smolt) at t-th year&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Spawners -&amp;gt; Eggs&lt;/strong&gt;&lt;/p&gt;

&lt;div id=&quot;cy2&quot;&gt;&lt;/div&gt;

&lt;p&gt;W&lt;sub&gt;t&lt;/sub&gt; = Sp&lt;sub&gt;t&lt;/sub&gt; ⋅ P_f ⋅ fec&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;W&lt;sub&gt;t&lt;/sub&gt; = # of eggs spawned by the adults returning in year t&lt;/li&gt;
  &lt;li&gt;Sp&lt;sub&gt;t&lt;/sub&gt; = # of spawners = Sp1 + Sp2&lt;/li&gt;
  &lt;li&gt;P_f = proportion of females&lt;/li&gt;
  &lt;li&gt;fec = mean of fecundity (fertility)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Eggs -&amp;gt; 0+ juveniles&lt;/strong&gt;&lt;/p&gt;

&lt;div id=&quot;cy3&quot;&gt;&lt;/div&gt;

&lt;p&gt;This is Ricker Cruve model with parameters (α,β) which is a classic discrete population model.&lt;/p&gt;

&lt;p&gt;0+&lt;sub&gt;t+1&lt;/sub&gt; = α ⋅ W&lt;sub&gt;t&lt;/sub&gt; ⋅ e&lt;sup&gt;-β ⋅ W&lt;sub&gt;t&lt;/sub&gt;&lt;/sup&gt; ⋅ e&lt;sup&gt;ε&lt;sub&gt;t&lt;/sub&gt;&lt;/sup&gt; where ε&lt;sub&gt;t&lt;/sub&gt; ~iid N(0, σ&lt;sup&gt;2&lt;/sup&gt;)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;0+&lt;sub&gt;t+1&lt;/sub&gt; = freshwater production of juveniles resulting from the reproduction of the spawners returning in year t&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;0+ juveniles -&amp;gt; Smolts&lt;/strong&gt;&lt;/p&gt;

&lt;div id=&quot;cy4&quot;&gt;&lt;/div&gt;

&lt;p&gt;PSm&lt;sub&gt;t+2&lt;/sub&gt; ~ Binomial(0+&lt;sub&gt;t+1&lt;/sub&gt;, γ&lt;sub&gt;0+&lt;/sub&gt;) = # of 0+&lt;sub&gt;t+1&lt;/sub&gt; will survive and migrate to PSm&lt;sub&gt;t+2&lt;/sub&gt;&lt;/p&gt;

&lt;div id=&quot;cy5&quot;&gt;&lt;/div&gt;

&lt;p&gt;Sm1&lt;sub&gt;t+2&lt;/sub&gt; ~ Binomial(PSm&lt;sub&gt;t+2&lt;/sub&gt;, θ&lt;sub&gt;Sm1&lt;/sub&gt;) = # of PSm&lt;sub&gt;t+2&lt;/sub&gt; will survive and migrate as 1+smolts (Sm1)&lt;/p&gt;

&lt;div id=&quot;cy6&quot;&gt;&lt;/div&gt;

&lt;p&gt;Sm2&lt;sub&gt;t+3&lt;/sub&gt; ~ Binomial(Parr1&lt;sub&gt;t+2&lt;/sub&gt;, γ&lt;sub&gt;parr1&lt;/sub&gt;) = # of Parr1&lt;sub&gt;t+2&lt;/sub&gt; will survive and migrate as 2+smolts (Sm2)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;PSm&lt;sub&gt;t+2&lt;/sub&gt; = young-of-the-year 0+&lt;sub&gt;t+1&lt;/sub&gt; will survive next spring year t+2&lt;/li&gt;
  &lt;li&gt;γ&lt;sub&gt;0+&lt;/sub&gt; = survival rate of 0+&lt;/li&gt;
  &lt;li&gt;θ&lt;sub&gt;Sm1&lt;/sub&gt; = proportion of pre-smolts will migrate as 1+Smolts (survival rate)&lt;/li&gt;
  &lt;li&gt;γ&lt;sub&gt;parr1&lt;/sub&gt; = survival rate of parr1&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Smolts -&amp;gt; Returning Spawners&lt;/strong&gt;&lt;/p&gt;

&lt;div id=&quot;cy7&quot;&gt;&lt;/div&gt;

&lt;p&gt;Sp1&lt;sub&gt;t+3&lt;/sub&gt; ~ Binomial(Sm1&lt;sub&gt;t+2&lt;/sub&gt;, γ&lt;sub&gt;Sm&lt;/sub&gt;)&lt;/p&gt;

&lt;div id=&quot;cy8&quot;&gt;&lt;/div&gt;

&lt;p&gt;Sp2&lt;sub&gt;t+4&lt;/sub&gt; ~ Binomial(Sm2&lt;sub&gt;t+3&lt;/sub&gt;, γ&lt;sub&gt;Sm&lt;/sub&gt;)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;γ&lt;sub&gt;Sm&lt;/sub&gt; = survival rate&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Learning from observations&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These two are observed and given:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;C&lt;sub&gt;Sm1,t&lt;/sub&gt; = observations = # of smolts caught downstream trap&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;π&lt;sub&gt;Sm&lt;/sub&gt; = trap efficiency&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Using these data points we can figure out the unknowns.&lt;/p&gt;

&lt;p&gt;Our unknowns, the parameters, are: α, β, σ, γ&lt;sub&gt;0+&lt;/sub&gt;, θ&lt;sub&gt;sm1&lt;/sub&gt;, γ&lt;sub&gt;Parr1&lt;/sub&gt;, γ&lt;sub&gt;Sm&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;# of smolts caught downstream trap can be model as a binomial distribution either the smolt is caught or not.&lt;/p&gt;

&lt;p&gt;C&lt;sub&gt;Sm1,t&lt;/sub&gt; ~ Binomial(Sm1&lt;sub&gt;t&lt;/sub&gt;, π&lt;sub&gt;Sm&lt;/sub&gt;)&lt;/p&gt;

&lt;p&gt;*Note (advance): observations assume &lt;a href=&quot;https://en.wikipedia.org/wiki/Bayesian_hierarchical_modeling#Exchangeability&quot;&gt;Bayesian’s property of exchangability&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-models---creating-a-proability-graphical-model&quot;&gt;The Models - Creating a proability graphical model&lt;/h3&gt;

&lt;p&gt;0+&lt;sub&gt;t+1&lt;/sub&gt; = α ⋅ W&lt;sub&gt;t&lt;/sub&gt; ⋅ e&lt;sup&gt;-β ⋅ W&lt;sub&gt;t&lt;/sub&gt;&lt;/sup&gt; ⋅ e&lt;sup&gt;ε&lt;sub&gt;t&lt;/sub&gt;&lt;/sup&gt; where ε&lt;sub&gt;t&lt;/sub&gt; ~iid N(0, σ&lt;sup&gt;2&lt;/sup&gt;)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;0+&lt;sub&gt;t+1&lt;/sub&gt; = freshwater production of juveniles resulting from the reproduction of the spawners returning in year t&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;cy9&quot;&gt;&lt;/div&gt;

&lt;p&gt;PSm&lt;sub&gt;t+2&lt;/sub&gt; ~ Binomial(0+&lt;sub&gt;t+1&lt;/sub&gt;, γ&lt;sub&gt;0+&lt;/sub&gt;) = # of 0+&lt;sub&gt;t+1&lt;/sub&gt; will survive and migrate to PSm&lt;sub&gt;t+2&lt;/sub&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;γ&lt;sub&gt;0+&lt;/sub&gt; = survival rate of 0+&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;cy10&quot;&gt;&lt;/div&gt;

&lt;p&gt;Sm1&lt;sub&gt;t+2&lt;/sub&gt; ~ Binomial(PSm&lt;sub&gt;t+2&lt;/sub&gt;, θ&lt;sub&gt;Sm1&lt;/sub&gt;) = # of PSm&lt;sub&gt;t+2&lt;/sub&gt; will survive and migrate as 1+smolts (Sm1)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;PSm&lt;sub&gt;t+2&lt;/sub&gt; = young-of-the-year 0+&lt;sub&gt;t+1&lt;/sub&gt; will survive next spring year t+2&lt;/li&gt;
  &lt;li&gt;θ&lt;sub&gt;Sm1&lt;/sub&gt; = proportion of pre-smolts will migrate as 1+Smolts (survival rate)&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;cy11&quot;&gt;&lt;/div&gt;

&lt;p&gt;Sm2&lt;sub&gt;t+3&lt;/sub&gt; ~ Binomial(Parr1&lt;sub&gt;t+2&lt;/sub&gt;, γ&lt;sub&gt;parr1&lt;/sub&gt;) = # of Parr1&lt;sub&gt;t+2&lt;/sub&gt; will survive and migrate as 2+smolts (Sm2)&lt;/p&gt;

&lt;div id=&quot;cy12&quot;&gt;&lt;/div&gt;

&lt;p&gt;Sp1&lt;sub&gt;t+3&lt;/sub&gt; ~ Binomial(Sm1&lt;sub&gt;t+2&lt;/sub&gt;, γ&lt;sub&gt;Sm&lt;/sub&gt;)&lt;/p&gt;

&lt;p&gt;Sp2&lt;sub&gt;t+4&lt;/sub&gt; ~ Binomial(Sm2&lt;sub&gt;t+3&lt;/sub&gt;, γ&lt;sub&gt;Sm&lt;/sub&gt;)&lt;/p&gt;

&lt;div id=&quot;cy13&quot;&gt;&lt;/div&gt;

&lt;p&gt;Now we put all the parts together into graph.&lt;/p&gt;

&lt;div id=&quot;cy14&quot;&gt;&lt;/div&gt;

&lt;p&gt;Okay, now that we got the probability graphical model down we can figure out the joint probability distribution.&lt;/p&gt;

&lt;p&gt;P(J&lt;sub&gt;t&lt;/sub&gt;) = ?&lt;/p&gt;

&lt;p&gt;Step 1. Looking at the graph,  we’re going to start with all nodes with no parent: α, β, σ, W&lt;sub&gt;t&lt;/sub&gt;, γ&lt;sub&gt;0+&lt;/sub&gt;, θ&lt;sub&gt;Sm1&lt;/sub&gt;, γ&lt;sub&gt;Parr1&lt;/sub&gt;, and γ&lt;sub&gt;Sm&lt;/sub&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;P(J&lt;sub&gt;t&lt;/sub&gt;) = 
P[&amp;alpha;] 
&amp;sdot; P[&amp;beta;] 
&amp;sdot; P[&amp;sigma;] 
&amp;sdot; P[W&lt;sub&gt;t&lt;/sub&gt;] 
&amp;sdot; P[&amp;gamma;&lt;sub&gt;0+&lt;/sub&gt;] 
&amp;sdot; P[&amp;theta;&lt;sub&gt;Sm1&lt;/sub&gt;] 
&amp;sdot; P[&amp;gamma;&lt;sub&gt;Parr1&lt;/sub&gt;] 
&amp;sdot; P[&amp;gamma;&lt;sub&gt;Sm&lt;/sub&gt;]
&amp;hellip;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Step 2. Now we’re going to look at the nodes with parents.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;0+&lt;sub&gt;t+1&lt;/sub&gt; is P[0+&lt;sub&gt;t+1&lt;/sub&gt;  |  W&lt;sub&gt;t&lt;/sub&gt;, α, β, σ]&lt;/li&gt;
  &lt;li&gt;PSm&lt;sub&gt;t+2&lt;/sub&gt; is P[PSm&lt;sub&gt;t+2&lt;/sub&gt;  |  0+&lt;sub&gt;t+2&lt;/sub&gt;, γ&lt;sub&gt;0+&lt;/sub&gt;]&lt;/li&gt;
  &lt;li&gt;Sm1&lt;sub&gt;t+2&lt;/sub&gt; &amp;amp; Parr1&lt;sub&gt;t+2&lt;/sub&gt; is P[Sm1&lt;sub&gt;t+2&lt;/sub&gt;, Parr1&lt;sub&gt;t+2&lt;/sub&gt;  |  PSm&lt;sub&gt;t+2&lt;/sub&gt;, θ&lt;sub&gt;Sm1&lt;/sub&gt;]. Notice how complex this one is. It is because Sm1 and Parr1 both share the same parameters.&lt;/li&gt;
  &lt;li&gt;P[Sp1&lt;sub&gt;t+3&lt;/sub&gt; | Sm1&lt;sub&gt;t+2&lt;/sub&gt;, γ&lt;sub&gt;Sm&lt;/sub&gt;]&lt;/li&gt;
  &lt;li&gt;P[Sm2&lt;sub&gt;t+3&lt;/sub&gt; | Parr1&lt;sub&gt;t+2&lt;/sub&gt;, γ&lt;sub&gt;Parr1&lt;/sub&gt;]&lt;/li&gt;
  &lt;li&gt;P[Sp2&lt;sub&gt;t+4&lt;/sub&gt; | Sm2&lt;sub&gt;t+3&lt;/sub&gt;, γ&lt;sub&gt;Sm&lt;/sub&gt;]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;P(J&lt;sub&gt;t&lt;/sub&gt;) = 
P[&amp;alpha;] 
&amp;sdot; P[&amp;beta;] 
&amp;sdot; P[&amp;sigma;] 
&amp;sdot; P[W&lt;sub&gt;t&lt;/sub&gt;] 
&amp;sdot; P[&amp;gamma;&lt;sub&gt;0+&lt;/sub&gt;] 
&amp;sdot; P[&amp;theta;&lt;sub&gt;Sm1&lt;/sub&gt;] 
&amp;sdot; P[&amp;gamma;&lt;sub&gt;Parr1&lt;/sub&gt;] 
&amp;sdot; P[&amp;gamma;&lt;sub&gt;Sm&lt;/sub&gt;] 
&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;sdot; P[0+&lt;sub&gt;t+1&lt;/sub&gt;  |  W&lt;sub&gt;t&lt;/sub&gt;, &amp;alpha;, &amp;beta;, &amp;sigma;] 
&amp;sdot; P[PSm&lt;sub&gt;t+2&lt;/sub&gt;  |  0+&lt;sub&gt;t+2&lt;/sub&gt;, &amp;gamma;&lt;sub&gt;0+&lt;/sub&gt;] 
&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;sdot; P[Sm1&lt;sub&gt;t+2&lt;/sub&gt;, Parr1&lt;sub&gt;t+2&lt;/sub&gt;  |  PSm&lt;sub&gt;t+2&lt;/sub&gt;, &amp;theta;&lt;sub&gt;Sm1&lt;/sub&gt;]
&amp;sdot; P[Sp1&lt;sub&gt;t+3&lt;/sub&gt; | Sm1&lt;sub&gt;t+2&lt;/sub&gt;, &amp;gamma;&lt;sub&gt;Sm&lt;/sub&gt;]
&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;sdot; P[Sm2&lt;sub&gt;t+3&lt;/sub&gt; | Parr1&lt;sub&gt;t+2&lt;/sub&gt;, &amp;gamma;&lt;sub&gt;Parr1&lt;/sub&gt;]
&amp;sdot; P[Sp2&lt;sub&gt;t+4&lt;/sub&gt; | Sm2&lt;sub&gt;t+3&lt;/sub&gt;, &amp;gamma;&lt;sub&gt;Sm&lt;/sub&gt;]
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;okay-so-what-wheres-the-bayesian-network&quot;&gt;Okay so what? Where’s the Bayesian network?&lt;/h3&gt;

&lt;p&gt;Not yet. The book needs to introduce the concept of a simple model vs a hierarchical model and some terminology.&lt;/p&gt;

&lt;p&gt;So far we haven’t introduce any observational variable (random variable) at all.&lt;/p&gt;

&lt;div id=&quot;cy15&quot;&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;θ represents parameters&lt;/li&gt;
  &lt;li&gt;Z represents latent parameters&lt;/li&gt;
  &lt;li&gt;Y represents the output Random Variable. (little y represent the realization/sample of Y random variable).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Left is a simple model. The right graph is a hierarchical model.&lt;/p&gt;

&lt;p&gt;Z represents latent variables (nuisance variables), basically variables we don’t really care, also they’re hidden we don’t observed it directly like Y.
Y represents observations. Observations are random so Y is capitalized and smaller y is the realization of Y or a sample of Y.
The node is pink because it is an observable.&lt;/p&gt;

&lt;p&gt;P[θ, Z, Y] = P[θ] ⋅ P[Z | θ] ⋅ P[Y | θ, Z]&lt;/p&gt;

&lt;p&gt;Well first what’s the experiment?&lt;/p&gt;

&lt;p&gt;For this it’s salmon captures and they’re model via binomial distribution either you catch the fish or not.&lt;/p&gt;

&lt;p&gt;Notice the C stands for catches.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;C&lt;sub&gt;0+, t+1&lt;/sub&gt; ~ Binomial(0+&lt;sub&gt;t+1&lt;/sub&gt;, π&lt;sub&gt;0+&lt;/sub&gt;)&lt;/li&gt;
  &lt;li&gt;C&lt;sub&gt;Sm1, t+2&lt;/sub&gt; ~ Binomial(Sm1&lt;sub&gt;t+2&lt;/sub&gt;, π&lt;sub&gt;Sm&lt;/sub&gt;)&lt;/li&gt;
  &lt;li&gt;C&lt;sub&gt;Sm2, t+3&lt;/sub&gt; ~ Binomial(Sm1&lt;sub&gt;t+3&lt;/sub&gt;, π&lt;sub&gt;Sm&lt;/sub&gt;)&lt;/li&gt;
  &lt;li&gt;C&lt;sub&gt;Sp1, t+3&lt;/sub&gt; ~ Binomial(Sp1&lt;sub&gt;t+3&lt;/sub&gt;, π&lt;sub&gt;Sp&lt;/sub&gt;)&lt;/li&gt;
  &lt;li&gt;C&lt;sub&gt;Sp2, t+4&lt;/sub&gt; ~ Binomial(Sp2&lt;sub&gt;t+4&lt;/sub&gt;, π&lt;sub&gt;Sp&lt;/sub&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;cy16&quot;&gt;&lt;/div&gt;

&lt;p&gt;Once again the squares represent known/given values (the π’s are given). 
The pink circle means observed values. 
Pink in general means they’re known either by given or by observations.
The purple boxes represent grouping and group the nodes into their respective group.&lt;/p&gt;

&lt;p&gt;Ok. Finally, we got a Bayesian network. 
Really, what now?&lt;/p&gt;

&lt;p&gt;How does y (the sample or realization of Y) fits in this fancy graph?&lt;/p&gt;

&lt;h3 id=&quot;what-happen-when-the-observation-is-available&quot;&gt;What happen when the Observation is available?&lt;/h3&gt;

&lt;p&gt;Before that notice how we build the model and the direction. 
The direction is downward from the Salmon cycle toward the latent variable and then towards the obsevation.&lt;/p&gt;

&lt;p&gt;Why did the book brought this up? 
It is because when you train the model using the data/observations that are available you go in the opposite direction.&lt;/p&gt;

&lt;p&gt;You start at the Y (observation layer and Y is a random variable) and Y is now, Y = y, since little y is the realization of random variable Y. 
y is a sample of Y or the data (values not just some placeholder variable). And you go up to latent layer and then to the parameter later.&lt;/p&gt;

&lt;p&gt;Let’s see it mathematically:&lt;/p&gt;

&lt;p&gt;Here’s the joint probability:&lt;/p&gt;

&lt;p&gt;P[Y, θ, Z]&lt;/p&gt;

&lt;p&gt;Now here’s the joint probability with Y = y, when we have data to train the model and find the paramenter.&lt;/p&gt;

&lt;p&gt;P[θ, Z | Y = y]&lt;/p&gt;

&lt;p&gt;Given Y = y, the observations propagate upward from the observation to the latent layer to the parameter layer.&lt;/p&gt;

&lt;p&gt;This is how you train the model after you are done creating the model.&lt;/p&gt;

&lt;p&gt;You can see the Bayes Rule connection too right? 
We’re always dealing with Joint Probability and Conditional Probability.&lt;/p&gt;

&lt;p&gt;Bayesian make it so that they’re conditionally independent. 
This is one of the property of Bayesian statistic.&lt;/p&gt;

&lt;p&gt;This is now a posterior distribution. 
Posterior being after the data.
Prior distribution is before the data.&lt;/p&gt;

&lt;p&gt;P[θ, Z | Y = y] = posterior distribution&lt;/p&gt;

&lt;p&gt;I’m going to repeat it again.&lt;/p&gt;

&lt;p&gt;Posterior is after the data have been inputed.&lt;/p&gt;

&lt;p&gt;Prior is before the data. It is your prior belief.&lt;/p&gt;

&lt;p&gt;In Bayesian you need to supply a belief in form of a prior distribution.
It’s weird but don’t worry if you don’t know anything then you can use a noninformative prior distribution.&lt;/p&gt;

&lt;p&gt;The belief thing is also away to encode expert belief too.&lt;/p&gt;

&lt;p&gt;So given what we have now, we just have to apply Bayes’ Rule to the conditional probability and you get your parameter values.&lt;/p&gt;

&lt;h3 id=&quot;bayes-rule&quot;&gt;Bayes’ Rule&lt;/h3&gt;

&lt;p&gt;P[θ Z | Y = y] = P[θ, Z, Y = y] / P[Y = y]&lt;/p&gt;

&lt;p&gt;Some stat here and you get.&lt;/p&gt;

&lt;p&gt;P[θ Z | Y = y] ∝ P[θ] ⋅ P[Z | θ] ⋅ P[Y = y | θ, Z]&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;I highly recommend this book. Andrew Gelman’s DBA book is more PhD level and his approach is not graphical like this but more mathy. 
Being visual this book helps a lot into tying things together.&lt;/p&gt;

&lt;p&gt;There was no observations/data and no code for this chapter. Ah dangit. Well until next time, stay tuned for the next episode of Bayesian man.&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;&lt;a href=&quot;#myfootnote1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;Buy the book if you like what you see on the post. This is basically my notes on chapter 1 of the book. 
It’s an amazing book and I highly recommend it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What did I learn about myself&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I’m glad I’m reviewing this chapter of the book again. I have a confession to make, if I want to understand a material/subject I need to read 3 times and do projects on it and a review of what I’ve learned. I need tons of practice. I guess this is one of the reason why I started this blog.&lt;/p&gt;

&lt;p&gt;This chapter ties in again DAG, Bayes’ Rule, and conditional probabilities. Good refresher and clear up things that I was wrong about. Especially the salmon breeding cycle, I didn’t think about the fact that it wasn’t a DAG. And that from that model we create a Bayesian Graph Model (DAG).&lt;/p&gt;

&lt;p&gt;I think I’ll go through each chapter of this book as a refresher while playing with javascript graphical libraries and hopefully learn Stan. I need to make sure I didn’t miss out on anything from the first reading.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What Did I Get to Practice? (for me)&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;del&gt;Bayesian Hierarchical Modeling using &lt;a href=&quot;https://cran.r-project.org/web/packages/rstan/index.html&quot;&gt;rstan&lt;/a&gt;.&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;Tried out a javascript data visualisation library, &lt;a href=&quot;https://js.cytoscape.org&quot;&gt;cytoscape.js&lt;/a&gt;, for modeling graphs.&lt;/li&gt;
  &lt;li&gt;Gets to refresh Bayesian Graphical Model (Bayesian Network).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Rough Roadmap for Bayesian HM&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Finish off this book. Introduction to Hierarchical Bayesian Modeling for Ecological Data (Chapman &amp;amp; Hall/CRC Applied Environmental Statistics)&lt;/li&gt;
  &lt;li&gt;Read this for Hamiltonian Markov Chain(Statistics in the social and behavioral sciences series) Gill, Jeff-Bayesian Methods A Social and Behavioral Sciences Approach-CRC Press (2014)&lt;/li&gt;
  &lt;li&gt;Read https://arxiv.org/abs/1111.4246 an implementation of HMC&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=21a85f1YS5Q&quot;&gt;Measure theory videos&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;DBA 3 reread again learning Dirichlet Process&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;etc&quot;&gt;Etc..&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a name=&quot;myfootnote1&quot; target=&quot;_blank&quot; href=&quot;https://www.amazon.com/gp/product/B00BBGP7QE/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=B00BBGP7QE&amp;amp;linkCode=as2&amp;amp;tag=mythicalprogr-20&amp;amp;linkId=0902d5294515fd663d8322cd1c3d0b30&quot;&gt;Introduction to Hierarchical Bayesian Modeling for Ecological Data (Chapman &amp;amp; Hall/CRC Applied Environmental Statistics)&lt;/a&gt;&lt;img src=&quot;//ir-na.amazon-adsystem.com/e/ir?t=mythicalprogr-20&amp;amp;l=am2&amp;amp;o=1&amp;amp;a=B00BBGP7QE&quot; width=&quot;1&quot; height=&quot;1&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;border:none !important; margin:0px !important;&quot; /&gt; The book link is Amazon affiliated. If you get it at CRC publishing you can get it 20 bucks cheaper if you use a discount code, just that it takes longer to ship. Also note I would recommend reading “Doing Bayesian Data Analysis” first before even trying to get into Hierarchical Modeling.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;www.htmlhelp.com/reference/html40/entities/symbols.html&quot;&gt;Would like to thank this website for all the html mathematical notations.&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The salmon sushi picture was taken from &lt;a href=&quot;pixabay.com&quot;&gt;pixabay&lt;/a&gt; under creative common license.&lt;br /&gt;
&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/cytoscape/3.1.3/cytoscape.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/static/js/post/salmon_post.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 15 Jul 2017 08:29:00 -0700</pubDate>
        <link>https://mythicalprogrammer.github.io/bayesian/modeling/hierarchicalmodeling/statistic/2017/07/15/bayesian2.html</link>
        <guid isPermaLink="true">https://mythicalprogrammer.github.io/bayesian/modeling/hierarchicalmodeling/statistic/2017/07/15/bayesian2.html</guid>
        
        
        <category>bayesian</category>
        
        <category>modeling</category>
        
        <category>hierarchicalmodeling</category>
        
        <category>statistic</category>
        
      </item>
    
      <item>
        <title>Light Novel Analysis (part 1)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/static/img/posts/lightnovel.jpg&quot; alt=&quot;light-novels&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;I’m into light novels so I’ve decided to combine my love for data science and light novel.&lt;/p&gt;

&lt;h3 id=&quot;information-retrieval&quot;&gt;Information Retrieval&lt;/h3&gt;

&lt;p&gt;I started out by retrieving some data from online via scraping using &lt;a href=&quot;https://scrapy.org/&quot;&gt;scrapy&lt;/a&gt;. I love scrapy and highly recommend it for any serious web scrapping task.&lt;/p&gt;

&lt;h3 id=&quot;the-data&quot;&gt;The Data&lt;/h3&gt;

&lt;p&gt;So what does the data look like?&lt;/p&gt;

&lt;p&gt;2739 novels.&lt;/p&gt;

&lt;p&gt;It’s in a json format.&lt;/p&gt;

&lt;p&gt;The columns are novel title, description, novel type, genre, tags, rating, language, authors, year, and license.&lt;/p&gt;

&lt;h3 id=&quot;exploratory-data-analysis&quot;&gt;Exploratory Data Analysis&lt;/h3&gt;

&lt;p&gt;For this portion I will be using R to do some EDA (❤ John Tukey).&lt;/p&gt;

&lt;p&gt;There are eight languages in the data including 7 novels with no language category.&lt;/p&gt;

&lt;p&gt;The languages are: Japanese, Chinese, Korean, Malaysian, Filipino, Indonesian, Thai, and Vietnamese.&lt;/p&gt;

&lt;div id=&quot;chart-donut-totalnovel-by-country&quot;&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Languages&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Number of Novels&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Average Ratings&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Japanese&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1496&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.994248&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Chinese&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1059&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.978571&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Korean&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;131&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.142424&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Filipino&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;23&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NA&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Indonesian&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;12&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NA&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Thai&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NA&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Malaysian&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NA&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Vietnamese&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NA&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Uncategorized&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NA&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The average ratings only include novels that have at least 30 user ratings.&lt;/p&gt;

&lt;p&gt;I did not take any other rating from other countries because there are less than 30 novels. As a statistician I feel 30 or more is a sufficient number to represent the population for each category anything smaller than is insufficient.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/posts/all_rating.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I plot a histogram plot for all novels from all countries with 30 or more user ratings. It is left skewed. While I can only speculate that people tend to rate for their favorite novels. It’s interesting because there is quite a lot of quality novels out there and many hover above 4.0 rating out of 5.0.&lt;/p&gt;

&lt;p&gt;There is a small number with perfect five ratings. 19 novels with 5 ratings all of them have single digit number of users reviews except for one (“Mum, I Used to Hate You”). It have 18 users that reviewed it with a 5 rating.&lt;/p&gt;

&lt;p&gt;Sweet let’s find novels that have high rating and at least 30 user reviews! I tried 4.5 at first but it’s a huge list at least 300+ so I decided to look for 4.7 ratings. There is exactly 75 novels with that criteria.&lt;/p&gt;

&lt;p&gt;Here’s the list and hope you guys find it useful.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A Game To Make Him Fall&lt;/li&gt;
  &lt;li&gt;A Will Eternal&lt;/li&gt;
  &lt;li&gt;A Slight Smile is Very Charming&lt;/li&gt;
  &lt;li&gt;Ame no Hi no Iris&lt;/li&gt;
  &lt;li&gt;At the Northern Fort&lt;/li&gt;
  &lt;li&gt;By A Slight Mistake&lt;/li&gt;
  &lt;li&gt;Cultivation Chat Group&lt;/li&gt;
  &lt;li&gt;Clockwork Planet&lt;/li&gt;
  &lt;li&gt;Demon Girl ~Tale of a Lax Demon~&lt;/li&gt;
  &lt;li&gt;Dungeon Defense&lt;/li&gt;
  &lt;li&gt;Eight Treasures Trousseau&lt;/li&gt;
  &lt;li&gt;Gekkou&lt;/li&gt;
  &lt;li&gt;Golden Age Legitimate Fei&lt;/li&gt;
  &lt;li&gt;Hokuou Kizoku to Moukinzuma no Yukiguni Karigurashi&lt;/li&gt;
  &lt;li&gt;Hiraheishi wa Kako o Yumemiru&lt;/li&gt;
  &lt;li&gt;Hikaru ga Chikyuu ni Itakoro……&lt;/li&gt;
  &lt;li&gt;I Reincarnated into an Otome Game as a Villainess With Only Destruction Flags…&lt;/li&gt;
  &lt;li&gt;I Don’t Like The World, I Only Like You&lt;/li&gt;
  &lt;li&gt;It’s Because You Said There Would Be Candy!!&lt;/li&gt;
  &lt;li&gt;Joy of Life&lt;/li&gt;
  &lt;li&gt;Kenkyo, Kenjitsu o Motto ni Ikite Orimasu&lt;/li&gt;
  &lt;li&gt;Kaze no Stigma&lt;/li&gt;
  &lt;li&gt;Kono Kamen no Akuma ni Sodan wo!&lt;/li&gt;
  &lt;li&gt;Kuzu to Kinka no Qualidea&lt;/li&gt;
  &lt;li&gt;Manuscript Screening Boy and Manuscript Submitting Girl&lt;/li&gt;
  &lt;li&gt;Marietta-hime no Konrei&lt;/li&gt;
  &lt;li&gt;Marginal Operation&lt;/li&gt;
  &lt;li&gt;Maoyuu Maou Yuusha&lt;/li&gt;
  &lt;li&gt;Mimizuku to Yoru no Ou&lt;/li&gt;
  &lt;li&gt;Mondaiji-tachi ga Isekai kara Kuru Sou Desu yo?&lt;/li&gt;
  &lt;li&gt;Mulberry Song&lt;/li&gt;
  &lt;li&gt;My Death Flags Show No Sign of Ending&lt;/li&gt;
  &lt;li&gt;No Game No Life&lt;/li&gt;
  &lt;li&gt;Nobunaga’s Imouto is My Wife&lt;/li&gt;
  &lt;li&gt;Ookami to Koushinryou&lt;/li&gt;
  &lt;li&gt;Overlord (LN)&lt;/li&gt;
  &lt;li&gt;Ouroboros Record ~Circus of Oubeniel~&lt;/li&gt;
  &lt;li&gt;Our Second Master&lt;/li&gt;
  &lt;li&gt;Quickly Wear the Face of the Devil&lt;/li&gt;
  &lt;li&gt;Rakuin no Monshou&lt;/li&gt;
  &lt;li&gt;Rain&lt;/li&gt;
  &lt;li&gt;Release that Witch&lt;/li&gt;
  &lt;li&gt;Running Away From The Hero!&lt;/li&gt;
  &lt;li&gt;Sansheng, Wangchuan Wu Shang&lt;/li&gt;
  &lt;li&gt;Semi Datte Tensei Sureba Ryuu Ni Naru&lt;/li&gt;
  &lt;li&gt;Sweet Heart in Honeyed Desire&lt;/li&gt;
  &lt;li&gt;Tabi ni Deyou, Horobiyuku Sekai no Hate Made&lt;/li&gt;
  &lt;li&gt;The Bathroom Goddess&lt;/li&gt;
  &lt;li&gt;The Destruction of a Triad Boss Trilogy&lt;/li&gt;
  &lt;li&gt;The Girl Who Bore the Flame Ring&lt;/li&gt;
  &lt;li&gt;The Girl Who Ate a Death God&lt;/li&gt;
  &lt;li&gt;The Founder of Diabolism&lt;/li&gt;
  &lt;li&gt;The Legend of Sun Knight&lt;/li&gt;
  &lt;li&gt;The Grandmaster Strategist&lt;/li&gt;
  &lt;li&gt;The Magnificent Battle Records of A Former Noble Lady&lt;/li&gt;
  &lt;li&gt;The Princess Wei Yang&lt;/li&gt;
  &lt;li&gt;The Probability I Can Kill My Wife Without Being Found Out&lt;/li&gt;
  &lt;li&gt;The Other World Dining Hall (LN)&lt;/li&gt;
  &lt;li&gt;The Rebirth of the Malicious Empress of Military Lineage&lt;/li&gt;
  &lt;li&gt;The Scum Villain’s Self-Saving System&lt;/li&gt;
  &lt;li&gt;The Tang Dynasty’s Female Forensic Doctor&lt;/li&gt;
  &lt;li&gt;The Witch and the Gourd of Stories&lt;/li&gt;
  &lt;li&gt;To Be A Virtuous Wife&lt;/li&gt;
  &lt;li&gt;Three Days of Happiness&lt;/li&gt;
  &lt;li&gt;Uchi no Musume no Tame naraba, Ore wa Moshikashitara Maou mo Taoseru kamo Shirenai (LN)&lt;/li&gt;
  &lt;li&gt;Uchi no Musume no Tame naraba, Ore wa Moshikashitara Maou mo Taoseru kamo Shirenai (WN)&lt;/li&gt;
  &lt;li&gt;Tsuyokute New Saga (LN)&lt;/li&gt;
  &lt;li&gt;Vermillion&lt;/li&gt;
  &lt;li&gt;Utsuro no Hako to Zero no Maria&lt;/li&gt;
  &lt;li&gt;Why Is the Prettiest Girl in School Trying to Talk to a Loner Like Me during Lunch Break?&lt;/li&gt;
  &lt;li&gt;When He Comes, Close Your Eyes&lt;/li&gt;
  &lt;li&gt;Virtual World: Peerless White Emperor&lt;/li&gt;
  &lt;li&gt;Woof Woof Story ~ I Told You I am a Rich Person’s Dog, Not Fenrir ~&lt;/li&gt;
  &lt;li&gt;Yahari Ore no Seishun Love Come wa Machigatte Iru&lt;/li&gt;
  &lt;li&gt;Youjo Senki&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;I think I’ll be doing more light novel analysis in the future.&lt;/p&gt;

&lt;p&gt;I think I’ll do NLP too something like sentiment analysis or something for those tags and categories. Of course this is when I have time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What Did I Get to Practice? (for me)&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;My data science &amp;amp; statistic skills using &lt;a href=&quot;https://www.r-project.org/&quot;&gt;R&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;My web scraping skill using &lt;a href=&quot;https://scrapy.org/&quot;&gt;scrapy&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;My devops skill, I made a custom &lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;vagrant&lt;/a&gt; for &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;jekyll&lt;/a&gt; and used &lt;a href=&quot;https://www.ansible.com/&quot;&gt;ansible&lt;/a&gt; to self provision. I created a new blog just for this post.&lt;/li&gt;
  &lt;li&gt;I made a yummy pie chart.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;etc&quot;&gt;Etc..&lt;/h4&gt;

&lt;p&gt;The novel picture is taken from google searching for a CC license image.&lt;/p&gt;

&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.17/d3.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/c3/0.4.14/c3.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/static/js/post/lightnovel_novelbycountry_donut.js&quot;&gt;&lt;/script&gt;

</description>
        <pubDate>Thu, 13 Jul 2017 08:29:00 -0700</pubDate>
        <link>https://mythicalprogrammer.github.io/analysis/datascience/lightnovel/statistic/2017/07/13/lightnovels_analysis.html</link>
        <guid isPermaLink="true">https://mythicalprogrammer.github.io/analysis/datascience/lightnovel/statistic/2017/07/13/lightnovels_analysis.html</guid>
        
        
        <category>analysis</category>
        
        <category>datascience</category>
        
        <category>lightnovel</category>
        
        <category>statistic</category>
        
      </item>
    
  </channel>
</rss>
